[{"C:\\React\\coin_traders\\src\\index.js":"1","C:\\React\\coin_traders\\src\\ui\\Modal\\create.jsx":"2","C:\\React\\coin_traders\\src\\containers\\main\\TransactionListContainer.jsx":"3","C:\\React\\coin_traders\\src\\ui\\Theme.js":"4","C:\\React\\coin_traders\\src\\reducers\\index.js":"5","C:\\React\\coin_traders\\src\\Api.js":"6","C:\\React\\coin_traders\\src\\ui\\Text.jsx":"7","C:\\React\\coin_traders\\src\\ui\\Input.jsx":"8","C:\\React\\coin_traders\\src\\components\\main\\CoinOverview.jsx":"9","C:\\React\\coin_traders\\src\\actions\\transactionActions.js":"10","C:\\React\\coin_traders\\src\\components\\withLoading.jsx":"11","C:\\React\\coin_traders\\src\\components\\main\\TransactionTable.jsx":"12","C:\\React\\coin_traders\\src\\components\\main\\TransactionList.jsx":"13","C:\\React\\coin_traders\\src\\ui\\Modal\\context.js":"14","C:\\React\\coin_traders\\src\\constants\\modals.js":"15","C:\\React\\coin_traders\\src\\reducers\\transactionReducer.js":"16","C:\\React\\coin_traders\\src\\CoinApp.jsx":"17","C:\\React\\coin_traders\\src\\ui\\Toast.jsx":"18","C:\\React\\coin_traders\\src\\components\\main\\MainPage.jsx":"19","C:\\React\\coin_traders\\src\\containers\\main\\NotificationContainer.jsx":"20","C:\\React\\coin_traders\\src\\components\\AppNav.jsx":"21","C:\\React\\coin_traders\\src\\components\\main\\TradeCoinPage01.jsx":"22","C:\\React\\coin_traders\\src\\store\\configureStore.js":"23","C:\\React\\coin_traders\\src\\ui\\Button.jsx":"24","C:\\React\\coin_traders\\src\\components\\main\\CoinDashlet.jsx":"25","C:\\React\\coin_traders\\src\\components\\main\\Notification.jsx":"26","C:\\React\\coin_traders\\src\\actions\\notificationActions.js":"27","C:\\React\\coin_traders\\src\\ui\\withStyles.js":"28","C:\\React\\coin_traders\\src\\middlewares\\notificationEffects.js":"29","C:\\React\\coin_traders\\src\\debounce.jsx":"30","C:\\React\\coin_traders\\src\\reducers\\notificationReducer.js":"31","C:\\React\\coin_traders\\src\\components\\main\\TradeCoinPage.jsx":"32","C:\\React\\coin_traders\\src\\ModalProvider.jsx":"33","C:\\React\\coin_traders\\src\\middlewares\\transactionEffects.js":"34","C:\\React\\coin_traders\\src\\containers\\main\\TradeCoinPageContainer.js":"35","C:\\React\\coin_traders\\src\\ui\\Select.jsx":"36","C:\\React\\coin_traders\\src\\actions\\transactionPackActions.js":"37","C:\\React\\coin_traders\\src\\containers\\main\\TransactionSearchFilterContainer.jsx":"38","C:\\React\\coin_traders\\src\\components\\main\\TransactionSearchFilter.jsx":"39","C:\\React\\coin_traders\\src\\containers\\NotificationContainer.jsx":"40","C:\\React\\coin_traders\\src\\ui\\TableBody.jsx":"41","C:\\React\\coin_traders\\src\\components\\main\\TransactionPagination.jsx":"42","C:\\React\\coin_traders\\src\\containers\\main\\TransactionPaginationContainer.jsx":"43","C:\\React\\coin_traders\\src\\reducers\\searchFilterReducer.js":"44","C:\\React\\coin_traders\\src\\actions\\searchFilterActions.js":"45","C:\\React\\coin_traders\\src\\ui\\Option.jsx":"46","C:\\React\\coin_traders\\src\\ui\\Form.jsx":"47","C:\\React\\coin_traders\\src\\selectors\\transactionSelectors.js":"48","C:\\React\\coin_traders\\src\\ui\\TableRow.jsx":"49","C:\\React\\coin_traders\\src\\api-redux-pack\\createReducers.js":"50","C:\\React\\coin_traders\\src\\ui\\TableCell.jsx":"51","C:\\React\\coin_traders\\src\\components\\AppLayout.jsx":"52","C:\\React\\coin_traders\\src\\containers\\signup\\RegisterPageContainer.jsx":"53","C:\\React\\coin_traders\\src\\ui\\Heading.jsx":"54","C:\\React\\coin_traders\\src\\actions\\userActions.js":"55","C:\\React\\coin_traders\\src\\api-redux-pack\\createActions.js":"56","C:\\React\\coin_traders\\src\\components\\NotFound.jsx":"57","C:\\React\\coin_traders\\src\\containers\\RouterStateContainer.jsx":"58","C:\\React\\coin_traders\\src\\middlewares\\searchFilterEffects.js":"59","C:\\React\\coin_traders\\src\\middlewares\\routerEffects.js":"60","C:\\React\\coin_traders\\src\\ui\\Table.jsx":"61","C:\\React\\coin_traders\\src\\ui\\Card.jsx":"62","C:\\React\\coin_traders\\src\\ui\\TableHead.jsx":"63"},{"size":270,"mtime":1610418754274,"results":"64","hashOfConfig":"65"},{"size":1214,"mtime":1610418754283,"results":"66","hashOfConfig":"65"},{"size":1079,"mtime":1611033244238,"results":"67","hashOfConfig":"65"},{"size":1598,"mtime":1610418754288,"results":"68","hashOfConfig":"65"},{"size":424,"mtime":1611103954568,"results":"69","hashOfConfig":"65"},{"size":123,"mtime":1610418754263,"results":"70","hashOfConfig":"65"},{"size":1935,"mtime":1610418754288,"results":"71","hashOfConfig":"65"},{"size":2779,"mtime":1610418754282,"results":"72","hashOfConfig":"65"},{"size":774,"mtime":1610418754268,"results":"73","hashOfConfig":"65"},{"size":1686,"mtime":1610936713097,"results":"74","hashOfConfig":"65"},{"size":474,"mtime":1610588708622,"results":"75","hashOfConfig":"65"},{"size":2066,"mtime":1611020155401,"results":"76","hashOfConfig":"65"},{"size":1392,"mtime":1611206478931,"results":"77","hashOfConfig":"65"},{"size":88,"mtime":1610418754283,"results":"78","hashOfConfig":"65"},{"size":122,"mtime":1611105248185,"results":"79","hashOfConfig":"65"},{"size":5002,"mtime":1611021778383,"results":"80","hashOfConfig":"65"},{"size":1330,"mtime":1611197454920,"results":"81","hashOfConfig":"65"},{"size":1079,"mtime":1610591094400,"results":"82","hashOfConfig":"65"},{"size":502,"mtime":1611192934468,"results":"83","hashOfConfig":"65"},{"size":292,"mtime":1610591071043,"results":"84","hashOfConfig":"65"},{"size":1541,"mtime":1611193641537,"results":"85","hashOfConfig":"65"},{"size":2425,"mtime":1610418754269,"results":"86","hashOfConfig":"65"},{"size":2339,"mtime":1611198898953,"results":"87","hashOfConfig":"65"},{"size":2696,"mtime":1610418754280,"results":"88","hashOfConfig":"65"},{"size":1757,"mtime":1610418754268,"results":"89","hashOfConfig":"65"},{"size":517,"mtime":1610677427446,"results":"90","hashOfConfig":"65"},{"size":378,"mtime":1610677026293,"results":"91","hashOfConfig":"65"},{"size":413,"mtime":1610418754289,"results":"92","hashOfConfig":"65"},{"size":1037,"mtime":1611027172943,"results":"93","hashOfConfig":"65"},{"size":252,"mtime":1610936069971,"results":"94","hashOfConfig":"65"},{"size":772,"mtime":1611031500522,"results":"95","hashOfConfig":"65"},{"size":2491,"mtime":1611031676336,"results":"96","hashOfConfig":"65"},{"size":318,"mtime":1611066687627,"results":"97","hashOfConfig":"98"},{"size":563,"mtime":1611206897773,"results":"99","hashOfConfig":"65"},{"size":510,"mtime":1611027615884,"results":"100","hashOfConfig":"65"},{"size":4121,"mtime":1610418754285,"results":"101","hashOfConfig":"65"},{"size":2153,"mtime":1611206882271,"results":"102","hashOfConfig":"65"},{"size":685,"mtime":1611207189196,"results":"103","hashOfConfig":"65"},{"size":3177,"mtime":1611207250959,"results":"104","hashOfConfig":"65"},{"size":301,"mtime":1610955696889,"results":"105","hashOfConfig":"65"},{"size":716,"mtime":1610418754286,"results":"106","hashOfConfig":"65"},{"size":1580,"mtime":1611020477735,"results":"107","hashOfConfig":"65"},{"size":1362,"mtime":1611036664905,"results":"108","hashOfConfig":"65"},{"size":368,"mtime":1611018401205,"results":"109","hashOfConfig":"65"},{"size":168,"mtime":1611018201884,"results":"110","hashOfConfig":"65"},{"size":463,"mtime":1610418754284,"results":"111","hashOfConfig":"65"},{"size":1889,"mtime":1611207332880,"results":"112","hashOfConfig":"65"},{"size":1430,"mtime":1611040306419,"results":"113","hashOfConfig":"65"},{"size":519,"mtime":1610418754287,"results":"114","hashOfConfig":"65"},{"size":5422,"mtime":1611040234846,"results":"115","hashOfConfig":"65"},{"size":1440,"mtime":1610418754286,"results":"116","hashOfConfig":"65"},{"size":695,"mtime":1610418754267,"results":"117","hashOfConfig":"65"},{"size":382,"mtime":1611126445423,"results":"118","hashOfConfig":"65"},{"size":1556,"mtime":1610418754281,"results":"119","hashOfConfig":"65"},{"size":337,"mtime":1611126798471,"results":"120","hashOfConfig":"65"},{"size":1160,"mtime":1611126827474,"results":"121","hashOfConfig":"65"},{"size":678,"mtime":1611193703961,"results":"122","hashOfConfig":"65"},{"size":778,"mtime":1611197609543,"results":"123","hashOfConfig":"65"},{"size":653,"mtime":1611198218153,"results":"124","hashOfConfig":"65"},{"size":825,"mtime":1611199529645,"results":"125","hashOfConfig":"65"},{"size":546,"mtime":1610418754286,"results":"126","hashOfConfig":"65"},{"size":831,"mtime":1610418754280,"results":"127","hashOfConfig":"65"},{"size":1058,"mtime":1610418754287,"results":"128","hashOfConfig":"65"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"131"},"1i3qlf0",{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"134"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"141"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"146"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"152"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"161"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"152"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"141"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"184"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"141"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"171"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"171"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"149"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"149"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"adl3uh",{"filePath":"218","messages":"219","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"221"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"228","messages":"229","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"230","usedDeprecatedRules":"152"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"152"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"236"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"239"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"242","messages":"243","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"239"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"152"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"164"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"141"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"265"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"141"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"277","messages":"278","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"279","usedDeprecatedRules":"164"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"282","usedDeprecatedRules":"131"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"131"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\coin_traders\\src\\index.js",[],["292","293"],"C:\\React\\coin_traders\\src\\ui\\Modal\\create.jsx",[],["294","295"],"C:\\React\\coin_traders\\src\\containers\\main\\TransactionListContainer.jsx",["296","297"],"import { connect } from \"react-redux\";\r\nimport TransactionList from \"../../components/main/TransactionList\";\r\n//import { setTransactionList } from \"../../actions/transactionActions\";\r\n//import { requestTransactionList } from \"../../actions/transactionActions\";\r\nimport { FETCH_TRANSACTION_LIST, requestTransactionList } from \"../../actions/transactionPackActions\";\r\nimport {transactionListSelector,loadingStateSelector,transactionListLoadingStateSelector} from '../../selectors/transactionSelectors.js'\r\n\r\nconst mapStateToProps = (state) => {\r\n  // const { ids, entities,loadingState } = state.transactions;\r\n  // const loading = loadingState[FETCH_TRANSACTION_LIST];\r\n  // const transactions = ids.map((id) => entities[id]);\r\n  // return {transactions,loading}\r\n  // 셀렉터에 모든 내부 기능을 넘김\r\n  \r\n  return { transactions : transactionListSelector(state), loading : transactionListLoadingStateSelector(state)};\r\n};\r\n\r\nconst mapDisPatchToProps = {\r\n  requestTransactionList,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDisPatchToProps)(TransactionList);\r\n","C:\\React\\coin_traders\\src\\ui\\Theme.js",["298"],"export const LARGE_AND_ABOVE = 'largeAndAbove';\r\nconst BREAKPOINT_NAMES = {\r\n  LARGE: 'large',\r\n  MEDIUM: 'medium',\r\n  SMALL: 'small',\r\n};\r\n\r\nconst breakpoints = {\r\n  [BREAKPOINT_NAMES.LARGE]: 1128,\r\n  [BREAKPOINT_NAMES.MEDIUM]: 744,\r\n  [BREAKPOINT_NAMES.SMALL]: 327,\r\n};\r\n\r\nconst responsive = {\r\n  [LARGE_AND_ABOVE]: `@media (min-width: ${breakpoints[BREAKPOINT_NAMES.LARGE]}px)`,\r\n  [BREAKPOINT_NAMES.SMALL]: `@media (max-width: ${breakpoints[BREAKPOINT_NAMES.MEDIUM] - 1}px)`,\r\n  print: '@media print',\r\n};\r\nexport const unit = 4;\r\n\r\nexport default {\r\n  // 색상\r\n  color: {\r\n    primary: '#2196F3', // 주 색상\r\n    primaryDark: '#1976D2',\r\n    secondary: '#009688', // 부 색상\r\n    secondaryDark: '#00796b',\r\n    white: '#FFFFFF',\r\n    gray: '#9e9e9e',\r\n    grayLight: '#eeeeee',\r\n    grayDark: '#616161',\r\n    border: 'rgba(0, 0, 0, .15)',\r\n    default: '#333333', // 기본 문자 색상\r\n    error: '#e51c23', // 오류 색상\r\n  },\r\n  // 폰트 사이즈\r\n  size: {\r\n    h1: 48,\r\n    h2: 36,\r\n    h3: 28,\r\n    xg: 24,\r\n    lg: 18,\r\n    md: 14,\r\n    sm: 12,\r\n    xs: 10,\r\n  },\r\n  lineHeight: {\r\n    xg: 1.6,\r\n    lg: 1.6,\r\n    md: 1.5,\r\n    sm: 1.4,\r\n    xs: 1.4,\r\n  },\r\n  fontWeight: {\r\n    bold: 'bold',\r\n    normal: 'normal',\r\n    light: 300,\r\n  },\r\n  depth: {\r\n    level1: {\r\n      boxShadow: '0 2px 2px 0 rgba(0, 0, 0, 0.14)',\r\n    },\r\n    level2: {\r\n      boxShadow: '0 4px 5px 0 rgba(0, 0, 0, 0.14)',\r\n    },\r\n    level3: {\r\n      boxShadow: '0 8px 17px 12px rgba(0, 0, 0, 0.14)',\r\n    },\r\n  },\r\n  // 길이 단위\r\n  unit,\r\n  // 반응형 미디어 속성\r\n  responsive,\r\n};\r\n",["299","300"],"C:\\React\\coin_traders\\src\\reducers\\index.js",["301"],"C:\\React\\coin_traders\\src\\Api.js",[],["302","303"],"C:\\React\\coin_traders\\src\\ui\\Text.jsx",[],["304","305"],"C:\\React\\coin_traders\\src\\ui\\Input.jsx",[],["306","307"],"C:\\React\\coin_traders\\src\\components\\main\\CoinOverview.jsx",[],"C:\\React\\coin_traders\\src\\actions\\transactionActions.js",["308"],"import Api from '../Api';\r\nimport {showMessage} from \"./notificationActions\";\r\n\r\nexport const LOADING_TRANSACTION_LIST = 'transaction/LOADING_TRANSACTION_LIST';\r\nexport const SET_TRANSACTION_LIST = 'transaction/SET_TRANSACTION_LIST';\r\nexport const SET_ERROR = 'transaction/SET_ERROR';\r\nexport const TRADE_COMPLETE = 'transaction/TRADE_COMPLETE';\r\n\r\nexport function tradeComplete(){\r\n    return {type : TRADE_COMPLETE};\r\n}\r\n\r\nexport function setError(errorMessage){\r\n    return {\r\n        type : SET_ERROR,\r\n        payload : {errorMessage},\r\n    }\r\n}\r\n\r\nexport function setTransactionList(transactions) {\r\n    console.log(\"트랜잭션 액션\")\r\n    return {\r\n        type : SET_TRANSACTION_LIST,\r\n        payload : transactions,\r\n    }\r\n}\r\n\r\nexport function createTransaction(data,onComplete){\r\n    return dispatch => Api.post('/transactions',data).then(({data})=>{\r\n        dispatch(tradeComplete());\r\n        onComplete()\r\n    },\r\n    error => dispatch(setError(error.response.data.errorMessage)));\r\n}\r\n\r\nexport function requestTransactionList(params){\r\n    return (dispatch)=> {\r\n        dispatch(loading());\r\n        Api.get('/transactions',{params})\r\n        .then(\r\n            ({data})=>dispatch(setTransactionList(data))\r\n            ,error =>{\r\n                 dispatch(setError(error.response.data.errorMessage));\r\n                //  dispatch(showMessage(error.response.data.errorMessage,true))\r\n                },\r\n            );\r\n        //axios는 에러가 발생할때 then의 두번째 인자에 해당하는 함수를 호출함\r\n    }\r\n    \r\n    //함수를 반환함\r\n}\r\n\r\nexport function loading(){\r\n    return {\r\n        type : LOADING_TRANSACTION_LIST,\r\n    }\r\n}","C:\\React\\coin_traders\\src\\components\\withLoading.jsx",["309"],"import React from 'react';\n\nexport default (loadingMessage = '로딩중') => WrappedComponent => {\n  const { displayName, name: componentName } = WrappedComponent;\n  const wrappedComponentName = displayName || componentName;\n\n  function WithLoading({ isLoading, ...props }) {\n    if (isLoading) {\n      return loadingMessage;\n    }\n\n    return <WrappedComponent {...props} />;\n  }\n  WithLoading.displayName = `withLoading(${wrappedComponentName})`;\n  return WithLoading;\n};\n",["310","311"],"C:\\React\\coin_traders\\src\\components\\main\\TransactionTable.jsx",[],["312","313"],"C:\\React\\coin_traders\\src\\components\\main\\TransactionList.jsx",[],"C:\\React\\coin_traders\\src\\ui\\Modal\\context.js",[],"C:\\React\\coin_traders\\src\\constants\\modals.js",[],["314","315"],"C:\\React\\coin_traders\\src\\reducers\\transactionReducer.js",["316"],"C:\\React\\coin_traders\\src\\CoinApp.jsx",[],"C:\\React\\coin_traders\\src\\ui\\Toast.jsx",["317"],"import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, css, withStylesPropTypes } from \"./withStyles\";\r\nimport Spacing from \"./Spacing\";\r\nimport Text from \"./Text\";\r\n\r\nclass Toast extends PureComponent {\r\n  render() {\r\n    const { message, styles, warning } = this.props;\r\n    return (\r\n      <div {...css(styles.overlay)}>\r\n        <div {...css(styles.wrapper, warning && styles.warning)}>\r\n          <Spacing vertical={4} horizontal={8}>\r\n            {message}\r\n          </Spacing>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nToast.propTypes = {\r\n  ...withStylesPropTypes,\r\n  warning: PropTypes.bool,\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default withStyles(({ depth, unit, color }) => ({\r\n  overlay: {\r\n    position: \"fixed\",\r\n    bottom: 0,\r\n    right: 0,\r\n    margin: unit * 4,\r\n  },\r\n  wrapper: {\r\n    ...depth.level1,\r\n    borderRadius: unit,\r\n    backgroundColor: color.secondary,\r\n    padding: unit * 2,\r\n    marginBottom: unit * 4,\r\n  },\r\n  warning: {\r\n    backgroundColor: color.error,\r\n  },\r\n}))(Toast);\r\n",["318","319"],"C:\\React\\coin_traders\\src\\components\\main\\MainPage.jsx",[],"C:\\React\\coin_traders\\src\\containers\\main\\NotificationContainer.jsx",[],["320","321"],"C:\\React\\coin_traders\\src\\components\\AppNav.jsx",["322"],"//최상단 네비 메뉴, 페이지 제목, 회원가입 버튼\r\n\r\nimport React, { PureComponent } from \"react\";\r\nimport { withStyles, css, withStylesPropTypes } from \"../ui/withStyles\";\r\nimport Heading from \"../ui/Heading\";\r\nimport Text from \"../ui/Text\";\r\nimport {REGISTER_USER_MODAL} from '../constants/modals';\r\nimport {Consumer as Modal} from \"../ui/Modal/context\";\r\nimport Button from \"../ui/Button\";\r\n\r\nexport const HEIGHT = 64;\r\n\r\nclass AppNav extends PureComponent {\r\n  render() {\r\n    const { styles } = this.props;\r\n    return (\r\n      <div {...css(styles.wrapper)}>\r\n        <div {...css(styles.container)}>\r\n          <Heading level={3} inverse>\r\n            코인 거래소\r\n          </Heading>\r\n          <Modal>\r\n            {({openModal})=>(\r\n              <Button inverse bold large onPress={()=>openModal(REGISTER_USER_MODAL)}>\r\n                회원가입\r\n              </Button>\r\n            )}\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAppNav.propTypes = {\r\n  ...withStylesPropTypes,\r\n};\r\n\r\nexport default withStyles(({ color, depth, unit }) => ({\r\n  wrapper: {\r\n    ...depth.level1,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    height: HEIGHT - 4,\r\n    backgroundColor: color.primary,\r\n  },\r\n  container: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingLeft: unit * 2,\r\n    paddingRight: unit * 2,\r\n  },\r\n}))(AppNav);\r\n",["323","324"],"C:\\React\\coin_traders\\src\\components\\main\\TradeCoinPage01.jsx",["325"],"C:\\React\\coin_traders\\src\\store\\configureStore.js",["326"],"import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\nimport reducers from '../reducers';\r\nimport thunk from 'redux-thunk';\r\nimport notificationEffects from '../middlewares/notificationEffects'\r\n//import {SET_TRANSACTION_LIST} from '../actions/transactionActions';\r\nimport transactionEffects from '../middlewares/transactionEffects';\r\nimport searchFilterEffects from '../middlewares/searchFilterEffects';\r\nimport routerEffecs from '../middlewares/routerEffects'\r\n//redux-pack\r\nimport {middleware as reduxPackMiddleware} from 'redux-pack';\r\n\r\n\r\n// const customMiddleware = store =>nextRunner => action =>{\r\n//     console.log('미들웨어1 액션객체',action); //nextRunner 이전 작업\r\n//     console.log('미들웨어1 실행전',store.getState()); //nextRunner 이전 작업 2\r\n\r\n//     const result = nextRunner(action);;\r\n\r\n//     console.log('미들웨어1 실행 후',store.getState()); //nextRunner 이후\r\n//     return result;\r\n// }\r\n\r\n// const customMiddleware1 = () => nextRunner => action =>{\r\n//     if(action.type === SET_TRANSACTION_LIST){\r\n//         return nextRunner({\r\n//             ...action,\r\n//             payload :[{\r\n//                 id : 0,\r\n//                 code : 'DOIT',\r\n//                 name : '두잇코인',\r\n//                 totalPrice : 100000,\r\n//                 currentPrice : 1111,\r\n//                 dateTime : '현재시간',\r\n//             }]\r\n//         })\r\n//     }\r\n//     return nextRunner(action);\r\n// }\r\n\r\n// const customMiddleware2 = store =>nextRunner => action =>{\r\n//     console.log('미들웨어2 액션 전달됨',action); //nextRunner 이전 작업\r\n//     console.log('미들웨어2 실행전',store.getState()); //nextRunner 이전 작업 2\r\n\r\n//     const result = nextRunner(action);;\r\n\r\n//     console.log('미들웨어 2 실행후',store.getState()); //nextRunner 이후\r\n//     return result;\r\n// }\r\n\r\n// export default initStates =>createStore(\r\n//     combineReducers(reducers),\r\n//     initStates,\r\n//     composeWithDevTools(),\r\n// )\r\n\r\nexport default initStates =>createStore(\r\n    combineReducers(reducers),\r\n    initStates,\r\n    composeWithDevTools(applyMiddleware(thunk,reduxPackMiddleware,notificationEffects,transactionEffects,searchFilterEffects,routerEffecs))\r\n    ,\r\n)","C:\\React\\coin_traders\\src\\ui\\Button.jsx",[],["327","328"],"C:\\React\\coin_traders\\src\\components\\main\\CoinDashlet.jsx",[],"C:\\React\\coin_traders\\src\\components\\main\\Notification.jsx",[],"C:\\React\\coin_traders\\src\\actions\\notificationActions.js",[],"C:\\React\\coin_traders\\src\\ui\\withStyles.js",[],"C:\\React\\coin_traders\\src\\middlewares\\notificationEffects.js",["329","330","331","332"],"import {SET_ERROR} from '../actions/transactionActions';\r\nimport {showMessage,SHOW_NOTIFICATION,hideMessage} from '../actions/notificationActions';\r\nimport {debounce} from '../debounce';\r\n//redux-pack\r\nimport {KEY,LIFECYCLE} from 'redux-pack'\r\n//import {FETCH_TRANSACTION_LIST,createTransaction} from '../actions/transactionPackActions'\r\n\r\nconst debouceRunner = debounce(action=> action(),4000);\r\n\r\nexport default store => nextRunner=> action=>{\r\n    const {type,meta} = action;\r\n    if(meta && meta.notification){\r\n        const {success , error} = meta.notification;\r\n\r\n        if(success&&meta[KEY.LIFECYCLE]===LIFECYCLE.SUCCESS){//성공\r\n            store.dispatch(showMessage(success))\r\n            debouceRunner(() =>store.dispatch(hideMessage()));\r\n        }\r\n        else if(error && meta[KEY.LIFECYCLE] === LIFECYCLE.FAILURE){ //실패\r\n            store.dispatch(showMessage(error,true));\r\n            debouceRunner(()=>store.dispatch(hideMessage()));\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return nextRunner(action);\r\n\r\n}","C:\\React\\coin_traders\\src\\debounce.jsx",[],"C:\\React\\coin_traders\\src\\reducers\\notificationReducer.js",["333"],"import {SHOW_NOTIFICATION,HIDE_NOTIFICATION} from '../actions/notificationActions';\r\n\r\nconst initState = {\r\n    message :'',\r\n    warning : false,\r\n    showMessage : false,\r\n}\r\n\r\nexport default (state = initState,action) => {\r\n    const {type,payload} = action\r\n\r\n    switch(type){\r\n        case SHOW_NOTIFICATION :\r\n            {const{message,warning} = payload;\r\n\r\n            return{\r\n                ...state,\r\n                showMessage : true,\r\n                message,\r\n                warning,\r\n            };\r\n        }\r\n        case HIDE_NOTIFICATION : \r\n        {\r\n            return {\r\n                ...state,\r\n                message : '',\r\n                showMessage : false,\r\n            }\r\n        }\r\n        default : \r\n        return state;\r\n    }\r\n}","C:\\React\\coin_traders\\src\\components\\main\\TradeCoinPage.jsx",["334"],"import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Text from \"../../ui/Text\";\r\nimport Spacing from \"../../ui/Spacing\";\r\nimport Input from \"../../ui/Input\";\r\nimport Button from \"../../ui/Button\";\r\nimport InlineList from \"../../ui/InlineList\";\r\nimport Form from \"../../ui/Form\";\r\nimport { Consumer as Modal } from \"../../ui/Modal/context\";\r\n\r\nclass TradeCoinPage extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values, closeModal) {\r\n    const { name, code, createTransaction } = this.props;\r\n    const formValue = {\r\n      ...values,\r\n      code,\r\n      name,\r\n    };\r\n    console.log(\"code\", code);\r\n    console.log(\"name\", name);\r\n\r\n    createTransaction(formValue,closeModal);\r\n  }\r\n\r\n  render() {\r\n    const { name, price, type, loading } = this.props;\r\n    const typeName = type === \"sell\" ? \"판매\" : \"구매\";\r\n    return (\r\n      <Modal>\r\n        {({ closeModal }) => (\r\n          <Form\r\n            onSubmit={(values) => this.handleSubmit(values, closeModal)}\r\n            initValues={{ currentPrice: price }}\r\n          >\r\n            <Form.Consumer>\r\n              {({ onChange, values }) => (\r\n                <Spacing horizontal={4} vertical={8}>\r\n                  <Text xlarge bold>\r\n                    {name} {typeName}\r\n                  </Text>\r\n                  <Spacing bottom={2}>\r\n                    <Input\r\n                      name=\"currentPrice\"\r\n                      label=\"금액\"\r\n                      value={values[\"currentPrice\"]}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Spacing>\r\n                  <Spacing bottom={2}>\r\n                    <Input\r\n                      name=\"amount\"\r\n                      label=\"수량\"\r\n                      value={values[\"amount\"]}\r\n                      onChange={onChange}\r\n                    />\r\n                  </Spacing>\r\n                  <InlineList spacingBetween={1}>\r\n                  <Button primary disabled={loading}>\r\n                      {loading?'거래처리중':typeName}\r\n                    </Button>\r\n                    <Button onPress={closeModal}>취소</Button>\r\n                  </InlineList>\r\n                </Spacing>\r\n              )}\r\n            </Form.Consumer>\r\n          </Form>\r\n        )}\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\nTradeCoinPage.propTypes = {};\r\n\r\nexport default TradeCoinPage;\r\n","C:\\React\\coin_traders\\src\\ModalProvider.jsx",[],"C:\\React\\coin_traders\\src\\middlewares\\transactionEffects.js",["335","336"],"import {\r\n    TRADE_COMPLETE,\r\n    requestTransactionList,\r\n} from '../actions/transactionActions';\r\nimport {showMessage} from '../actions/notificationActions';\r\n\r\nexport default store => nextRunner => action=> {\r\n    const { type, payload } = action;\r\n    const result = nextRunner(action);\r\n    if(type === TRADE_COMPLETE){\r\n        const message = \"거래목록을 최선 정보로 업데이트 하였습니다. trnasactionEffects\";\r\n        store.dispatch(showMessage(message));\r\n        store.dispatch(requestTransactionList());\r\n    }\r\n    return result;\r\n}",["337","338"],"C:\\React\\coin_traders\\src\\containers\\main\\TradeCoinPageContainer.js",[],"C:\\React\\coin_traders\\src\\ui\\Select.jsx",[],"C:\\React\\coin_traders\\src\\actions\\transactionPackActions.js",["339"],"C:\\React\\coin_traders\\src\\containers\\main\\TransactionSearchFilterContainer.jsx",["340","341"],"import { connect } from \"react-redux\";\r\nimport TransactionSearchFilter from \"../../components/main/TransactionSearchFilter\";\r\n// import { setTransactionList } from \"../../actions/transactionActions\";\r\n//import { requestTransactionList } from \"../../actions/transactionActions\";\r\nimport { requestTransactionList } from \"../../actions/transactionPackActions\";\r\nimport {setFilter} from '../../actions/searchFilterActions'\r\n\r\n\r\nconst mapStateToProps = state =>({\r\n  initValues : state.searchFilter.params,\r\n})\r\n\r\n// export default connect(null, { requestTransactionList,setFilter })(\r\n//   TransactionSearchFilter\r\n// );\r\n\r\nexport default connect(mapStateToProps)(TransactionSearchFilter);","C:\\React\\coin_traders\\src\\components\\main\\TransactionSearchFilter.jsx",["342"],"//검색필터\r\n//폼에서 제공받은 프로바이더 를 이용해서 onChange, value  콜백 받음\r\n\r\nimport React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport InlineList from \"../../ui/InlineList\";\r\nimport Button from \"../../ui/Button\";\r\nimport Text from \"../../ui/Text\";\r\nimport Input from \"../../ui/Input\";\r\nimport Form from \"../../ui/Form\";\r\n\r\nimport Select, { Option } from \"../../ui/Select\";\r\nimport {withRouter} from 'react-router-dom';\r\n\r\n//import Api from \"../../Api\";\r\n\r\nclass TransactionSearchFilter extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleSubmit(params) {\r\n    //const { requestTransactionList,setFilter } = this.props; //검색 주소값을 넘겨주기 위해 변경\r\n    const{setFilter,history} = this.props\r\n    // Api.get(\"/transactions\", { params }).then(({ data }) =>\r\n    //   setTransactionList(data)\r\n    // );\r\n    const cleanedParams = Object.entries(params)\r\n      .filter(([key, value]) => value !== \"\")\r\n      .reduce((obj, [key, value]) => ({ ...obj, [key]: value }), {});\r\n    // requestTransactionList(cleanedParams);\r\n    // setFilter(cleanedParams);\r\n    const queryString = Object.entries(cleanedParams)\r\n    .map(([key,value])=>`${key}=${value}`) //['code=BTX', 'price=100']\r\n    .join('&'); //'code=BTX&price=100'\r\n    history.push(`/?${queryString}`);\r\n  }\r\n\r\n  render() {\r\n    const {initValues} = this.props;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} initValues={initValues}>\r\n        <Form.Consumer>\r\n          {({ onChange, values }) => (\r\n            <InlineList spacingBetween={2} verticalAlign=\"bottom\">\r\n              <Text xlarge bold>\r\n                검색\r\n              </Text>\r\n              <Select\r\n                name=\"code\"\r\n                label=\"코인 코드\"\r\n                onChange={onChange}\r\n                value={values[\"code\"]}\r\n              >\r\n                <Option label=\"선택해주세요\" value=\"\" />\r\n                <Option label=\"비트코인(BTX)\" value=\"BTX\" />\r\n                <Option label=\"이더리움(ETH)\" value=\"ETH\" />\r\n                <Option label=\"삼성전자\" value=\"samsung\" />\r\n                <Option label=\"삼성전자우\" value=\"samsungWoo\" />\r\n              </Select>\r\n              <Input\r\n                name=\"currentPrice_gte\"\r\n                label=\"최소거래가\"\r\n                onChange={onChange}\r\n                value={values[\"currentPrice_gte\"]}\r\n              />\r\n              <Input\r\n                name=\"currentPrice_lte\"\r\n                label=\"최대거래가\"\r\n                onChange={onChange}\r\n                value={values[\"currentPrice_lte\"]}\r\n              />\r\n              <Button type=\"submit\" primary>\r\n                검색\r\n              </Button>\r\n            </InlineList>\r\n          )}\r\n        </Form.Consumer>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nTransactionSearchFilter.defaultProps = {\r\n  onChange: () => ({}),\r\n};\r\n\r\nTransactionSearchFilter.propTypes = { requestTransactionList: PropTypes.func,\r\nsetFilter : PropTypes.func };\r\n\r\nexport default withRouter(TransactionSearchFilter) ;\r\n","C:\\React\\coin_traders\\src\\containers\\NotificationContainer.jsx",[],["343","344"],"C:\\React\\coin_traders\\src\\ui\\TableBody.jsx",[],["345","346"],"C:\\React\\coin_traders\\src\\components\\main\\TransactionPagination.jsx",[],"C:\\React\\coin_traders\\src\\containers\\main\\TransactionPaginationContainer.jsx",["347","348","349"],"import {connect} from 'react-redux';\r\nimport TransactionPagination from '../../components/main/TransactionPagination';\r\nimport {FETCH_TRANSACTION_LIST, requestTransactionList} from '../../actions/transactionPackActions';\r\nimport {loadingStateSelector,transactionListLoadingStateSelector} from '../../selectors/transactionSelectors.js'\r\nimport { isDuration } from 'moment';\r\n\r\n\r\nconst mapStateToProps = (state) =>{\r\n    // const {pagination,loadingState,ids} = state.transactions;\r\n    // const { number , size } = pagination;\r\n    // const loading = loadingState[FETCH_TRANSACTION_LIST]; //로딩 구분 & 분리\r\n    // return {\r\n    //     searchParams : state.searchFilter.params,\r\n    //     pageNumber : number || 1,\r\n    //     hasNext : ids.length === size,\r\n    //     //결과 목록의 개수가 페이지 크기가 같을 경우 다음페이지 존재한다고 가정,\r\n    //     loading,\r\n    // }\r\n    const {pagination,ids} = state.transactions;\r\n    const {number,size} = pagination;\r\n    return {\r\n        searchParams : state.searchFilter.params,\r\n        pageNumber : number || 1 ,\r\n        hasNext : ids.length === size,\r\n        loading : transactionListLoadingStateSelector(state),\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    requestTransactionList\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TransactionPagination);","C:\\React\\coin_traders\\src\\reducers\\searchFilterReducer.js",["350"],"import { SET_FILTER } from '../actions/searchFilterActions';\r\n\r\nconst initState = {\r\n    params :{}\r\n}\r\n\r\nexport default (state=initState, action)=>{\r\n    const {type, payload} = action;\r\n\r\n    switch(type){\r\n        case SET_FILTER :{\r\n            const { params } = payload;\r\n            return{...state,params};\r\n        }\r\n        default : return state;\r\n    }\r\n}","C:\\React\\coin_traders\\src\\actions\\searchFilterActions.js",[],"C:\\React\\coin_traders\\src\\ui\\Option.jsx",[],"C:\\React\\coin_traders\\src\\ui\\Form.jsx",[],"C:\\React\\coin_traders\\src\\selectors\\transactionSelectors.js",[],"C:\\React\\coin_traders\\src\\ui\\TableRow.jsx",[],"C:\\React\\coin_traders\\src\\api-redux-pack\\createReducers.js",["351"],"import {handle} from 'redux-pack';\r\nimport { CREATE,UPDATE,FETCH,FETCH_LIST,RESET } from './actionTypes';\r\n//서로 다른 데이터를 처리할때 같은 type의 액션을 사용할 것이므로 액션에서 포함시킨 meta의 resourceName과 리듀서의 이름이 \r\n//일치한 경우에만 리듀서 코드를 실행하도록 만듬\r\nexport default (...reducerNames)=>{\r\n    return reducerNames.reduce((apiReducers,name)=>{\r\n        const initState = {\r\n            ids : [],\r\n            entities : {},\r\n            loadingState : {\r\n                [`${CREATE}/${name}`] : false,\r\n                [`${UPDATE}/${name}`] : false,\r\n                [`${FETCH}/${name}`] : false,\r\n                [`${FETCH_LIST}/${name}`] : false,\r\n            },\r\n            errorState : {\r\n                [`${CREATE}/${name}`] : false,\r\n                [`${UPDATE}/${name}`] : false,\r\n                [`${FETCH}/${name}`] : false,\r\n                [`${FETCH_LIST}/${name}`] : false,\r\n            },\r\n            pagination : {},\r\n        };\r\n        apiReducers[name] = (state = initState, action)=>{\r\n            const {type, payload,meta} = action;\r\n            const {resourceName,key} = meta || {};\r\n\r\n            if(resourceName !== name){\r\n                return state;\r\n            }\r\n\r\n            switch(type){\r\n                case UPDATE:\r\n                case FETCH:\r\n                case CREATE :\r\n                case FETCH_LIST :{\r\n                    return handle(state,action, {\r\n                        start : prevState => ({\r\n                            ...prevState,\r\n                            loadingState:{\r\n                                ...prevState.loadingState,\r\n                                [`${type}/${name}`] : true,\r\n                            },\r\n                            errorState : {\r\n                                ...prevState.errorState,\r\n                                [`${type}/${name}`] : false,\r\n                            }\r\n                        }),\r\n                        success : prevState =>{\r\n                            const {data} = payload;\r\n                            if(type === FETCH_LIST){\r\n                                const {pageNumber,pageSize} = meta ||{};\r\n                                const ids = data.map(entity=>entity[key]);\r\n                                const entities = data.reduce(\r\n                                    (finalEntities,entity)=>({\r\n                                        ...finalEntities,\r\n                                        [entity[key]] : entity\r\n                                }),\r\n                                {}\r\n                                );\r\n\r\n                                return {\r\n                                    ...prevState,\r\n                                    ids,\r\n                                    entities : {...prevState.entities,...entities},\r\n                                    loadingState : {\r\n                                        ...prevState.loadingState,\r\n                                        [`${type}/${name}`] : false,\r\n                                    },\r\n                                    errorState : {\r\n                                        ...prevState.errorState,\r\n                                        [`${type}/${name}`] : false,\r\n                                    },\r\n                                    pagination : {\r\n                                        number : pageNumber,\r\n                                        size : pageSize,\r\n                                    },\r\n                                }\r\n                            }else{\r\n                                const id = data[key];\r\n                                return {\r\n                                    ...prevState,\r\n                                    id,\r\n                                    entities : {...prevState.entities,[id] : data},\r\n                                    loadingState : {\r\n                                        ...prevState.loadingState,\r\n                                        [`${type}/${name}`] : false,\r\n                                    },\r\n                                    errorState : {\r\n                                        ...prevState.errorState,\r\n                                        [`${type}/${name}`] : false,\r\n                                    },\r\n                                }\r\n                            }\r\n                            \r\n                        },\r\n                        failure : prevState =>{\r\n                            const {errorMessage} = payload.response ? payload.response.data : {};\r\n                            return {\r\n                                ...prevState,\r\n                                loadingState : {\r\n                                    ...prevState.loadingState,\r\n                                    [`${type}/${name}`] : false,\r\n                                },\r\n                                errorState : {\r\n                                    ...prevState.errorState,\r\n                                    [`${type}/${name}`] : errorMessage||true,\r\n                                },\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                case RESET : return initState;\r\n                default : return state;\r\n            }\r\n        }\r\n        return apiReducers;\r\n    },{})\r\n}","C:\\React\\coin_traders\\src\\ui\\TableCell.jsx",[],"C:\\React\\coin_traders\\src\\components\\AppLayout.jsx",[],["352","353"],"C:\\React\\coin_traders\\src\\containers\\signup\\RegisterPageContainer.jsx",[],"C:\\React\\coin_traders\\src\\ui\\Heading.jsx",[],"C:\\React\\coin_traders\\src\\actions\\userActions.js",[],"C:\\React\\coin_traders\\src\\api-redux-pack\\createActions.js",["354"],"import {FETCH_LIST,CREATE,UPDATE,FETCH,RESET} from './actionTypes';\r\nimport Api from '../Api';\r\n\r\nexport default (resourceName, key = 'id') =>({\r\n    collection : (params={}, meta={}) => ({\r\n        type : FETCH_LIST,\r\n        promise : Api.get(resourceName,{params}),\r\n        meta : {\r\n            ...meta,\r\n            key,\r\n            resourceName,\r\n        }\r\n    }),\r\n    member : (id,params={},meta={})=>({\r\n        type : FETCH,\r\n        promise : Api.get(`${resourceName}/${id}`,{params}),\r\n        meta : {\r\n            ...meta,\r\n            key,\r\n            resourceName,\r\n        }\r\n    }),\r\n    create : (data,params={},meta={})=>({\r\n        type : CREATE,\r\n        promise : Api.post(resourceName,data,{params}),\r\n        meta : {\r\n            ...meta,\r\n            key,\r\n            resourceName\r\n        }\r\n    }),\r\n    update : (id,data,params={},meta={})=>({\r\n        type : UPDATE,\r\n        promise : Api.get(`${resourceName}/${id}`,data,{params}),\r\n        meta : {\r\n            ...meta,\r\n            key,\r\n            resourceName,\r\n        }\r\n    }),\r\n    reset : ()=>({\r\n        type : RESET,\r\n        meta : {resourceName}\r\n    })\r\n})","C:\\React\\coin_traders\\src\\components\\NotFound.jsx",[],"C:\\React\\coin_traders\\src\\containers\\RouterStateContainer.jsx",["355"],"import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {setLocation} from '../actions/routerActions';\r\nimport {withRouter} from 'react-router';\r\nimport compose from 'recompose/compose';\r\n\r\nclass RouterState extends PureComponent {\r\n    componentDidMount(){\r\n        const { setLocation, location } = this.props;\r\n        setLocation(location);\r\n    }\r\n    componentDidUpdate(){\r\n        const { setLocation, location } = this.props;\r\n        setLocation(location);\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nRouterState.propTypes = {\r\n    setLocation : PropTypes.func,\r\n    location : PropTypes.object,\r\n}\r\n\r\nexport default compose(connect(null, { setLocation }), withRouter)(RouterState);","C:\\React\\coin_traders\\src\\middlewares\\searchFilterEffects.js",["356"],"import {SET_FILTER} from '../actions/searchFilterActions';\r\nimport {requestTransactionList,resetTransactionList} from '../actions/transactionPackActions';\r\n\r\nexport default store => nextRunner => action=>{\r\n    //검색 필터 변경이 생길때 자동으로 검색결과 요청을 구현\r\n    const { type, payload } = action;\r\n    const result = nextRunner(action);\r\n    if(type === SET_FILTER){\r\n        const {params} = payload || {};\r\n        store.dispatch(resetTransactionList());\r\n        //검색결과를 요청하기 전에 현재 검색 목록 초기화\r\n        store.dispatch(requestTransactionList(params));\r\n    }\r\n    return result;\r\n}","C:\\React\\coin_traders\\src\\middlewares\\routerEffects.js",["357"],"import { SET_LOCATION } from '../actions/routerActions';\r\nimport { setFilter } from '../actions/searchFilterActions';\r\n\r\nfunction parse(qs){\r\n    //쿼리 스트링 값을 객체로 반환함\r\n    const queryString = qs.substr(1);\r\n    const chunk = queryString.split('&');\r\n    return chunk\r\n    .map((chunk)=>chunk.split(\"=\"))\r\n    .reduce((result,[key,value])=>({\r\n        ...result,[key]:value\r\n    }),{});\r\n}\r\n\r\nexport default store=>nextRunner=>action=>{\r\n    const {type, payload } = action;\r\n    const result = nextRunner(action);\r\n    if(type === SET_LOCATION){ //주소 동기화 액션에서만 작동\r\n        const {pathname,search} = payload.location;\r\n        if(pathname ==='/'){ //경로가 일치할때만 작동\r\n            store.dispatch(setFilter(parse(search)))\r\n        }\r\n    }\r\n    return result;\r\n}","C:\\React\\coin_traders\\src\\ui\\Table.jsx",[],"C:\\React\\coin_traders\\src\\ui\\Card.jsx",[],"C:\\React\\coin_traders\\src\\ui\\TableHead.jsx",[],{"ruleId":"358","replacedBy":"359"},{"ruleId":"360","replacedBy":"361"},{"ruleId":"358","replacedBy":"362"},{"ruleId":"360","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":5,"column":10,"nodeType":"366","messageId":"367","endLine":5,"endColumn":32},{"ruleId":"364","severity":1,"message":"368","line":6,"column":33,"nodeType":"366","messageId":"367","endLine":6,"endColumn":53},{"ruleId":"369","severity":1,"message":"370","line":21,"column":1,"nodeType":"371","endLine":74,"endColumn":3},{"ruleId":"358","replacedBy":"372"},{"ruleId":"360","replacedBy":"373"},{"ruleId":"369","severity":1,"message":"370","line":12,"column":1,"nodeType":"371","endLine":17,"endColumn":2},{"ruleId":"358","replacedBy":"374"},{"ruleId":"360","replacedBy":"375"},{"ruleId":"358","replacedBy":"376"},{"ruleId":"360","replacedBy":"377"},{"ruleId":"358","replacedBy":"378"},{"ruleId":"360","replacedBy":"379"},{"ruleId":"364","severity":1,"message":"380","line":2,"column":9,"nodeType":"366","messageId":"367","endLine":2,"endColumn":20},{"ruleId":"369","severity":1,"message":"381","line":3,"column":1,"nodeType":"371","endLine":16,"endColumn":3},{"ruleId":"358","replacedBy":"382"},{"ruleId":"360","replacedBy":"383"},{"ruleId":"358","replacedBy":"384"},{"ruleId":"360","replacedBy":"385"},{"ruleId":"358","replacedBy":"386"},{"ruleId":"360","replacedBy":"387"},{"ruleId":"369","severity":1,"message":"381","line":23,"column":1,"nodeType":"371","endLine":137,"endColumn":2},{"ruleId":"364","severity":1,"message":"388","line":5,"column":8,"nodeType":"366","messageId":"367","endLine":5,"endColumn":12},{"ruleId":"358","replacedBy":"389"},{"ruleId":"360","replacedBy":"390"},{"ruleId":"358","replacedBy":"391"},{"ruleId":"360","replacedBy":"392"},{"ruleId":"364","severity":1,"message":"388","line":6,"column":8,"nodeType":"366","messageId":"367","endLine":6,"endColumn":12},{"ruleId":"358","replacedBy":"393"},{"ruleId":"360","replacedBy":"394"},{"ruleId":"364","severity":1,"message":"395","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"369","severity":1,"message":"381","line":57,"column":1,"nodeType":"371","endLine":62,"endColumn":2},{"ruleId":"358","replacedBy":"396"},{"ruleId":"360","replacedBy":"397"},{"ruleId":"364","severity":1,"message":"398","line":1,"column":9,"nodeType":"366","messageId":"367","endLine":1,"endColumn":18},{"ruleId":"364","severity":1,"message":"399","line":2,"column":21,"nodeType":"366","messageId":"367","endLine":2,"endColumn":38},{"ruleId":"369","severity":1,"message":"381","line":10,"column":1,"nodeType":"371","endLine":30,"endColumn":2},{"ruleId":"364","severity":1,"message":"400","line":11,"column":12,"nodeType":"366","messageId":"367","endLine":11,"endColumn":16},{"ruleId":"369","severity":1,"message":"381","line":9,"column":1,"nodeType":"371","endLine":34,"endColumn":2},{"ruleId":"364","severity":1,"message":"395","line":2,"column":8,"nodeType":"366","messageId":"367","endLine":2,"endColumn":17},{"ruleId":"369","severity":1,"message":"381","line":7,"column":1,"nodeType":"371","endLine":16,"endColumn":2},{"ruleId":"364","severity":1,"message":"401","line":8,"column":19,"nodeType":"366","messageId":"367","endLine":8,"endColumn":26},{"ruleId":"358","replacedBy":"402"},{"ruleId":"360","replacedBy":"403"},{"ruleId":"364","severity":1,"message":"404","line":1,"column":8,"nodeType":"366","messageId":"367","endLine":1,"endColumn":11},{"ruleId":"364","severity":1,"message":"405","line":5,"column":10,"nodeType":"366","messageId":"367","endLine":5,"endColumn":32},{"ruleId":"364","severity":1,"message":"406","line":6,"column":9,"nodeType":"366","messageId":"367","endLine":6,"endColumn":18},{"ruleId":"364","severity":1,"message":"407","line":24,"column":11,"nodeType":"366","messageId":"367","endLine":24,"endColumn":20},{"ruleId":"358","replacedBy":"408"},{"ruleId":"360","replacedBy":"409"},{"ruleId":"358","replacedBy":"410"},{"ruleId":"360","replacedBy":"411"},{"ruleId":"364","severity":1,"message":"365","line":3,"column":9,"nodeType":"366","messageId":"367","endLine":3,"endColumn":31},{"ruleId":"364","severity":1,"message":"368","line":4,"column":9,"nodeType":"366","messageId":"367","endLine":4,"endColumn":29},{"ruleId":"364","severity":1,"message":"412","line":5,"column":10,"nodeType":"366","messageId":"367","endLine":5,"endColumn":20},{"ruleId":"369","severity":1,"message":"381","line":7,"column":1,"nodeType":"371","endLine":17,"endColumn":2},{"ruleId":"369","severity":1,"message":"381","line":5,"column":1,"nodeType":"371","endLine":119,"endColumn":2},{"ruleId":"358","replacedBy":"413"},{"ruleId":"360","replacedBy":"414"},{"ruleId":"369","severity":1,"message":"381","line":4,"column":1,"nodeType":"371","endLine":45,"endColumn":3},{"ruleId":"364","severity":1,"message":"415","line":1,"column":8,"nodeType":"366","messageId":"367","endLine":1,"endColumn":13},{"ruleId":"369","severity":1,"message":"381","line":4,"column":1,"nodeType":"371","endLine":15,"endColumn":2},{"ruleId":"369","severity":1,"message":"381","line":15,"column":1,"nodeType":"371","endLine":25,"endColumn":2},"no-native-reassign",["416"],"no-negated-in-lhs",["417"],["416"],["417"],"no-unused-vars","'FETCH_TRANSACTION_LIST' is defined but never used.","Identifier","unusedVar","'loadingStateSelector' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["416"],["417"],["416"],["417"],["416"],["417"],["416"],["417"],"'showMessage' is defined but never used.","Assign arrow function to a variable before exporting as module default",["416"],["417"],["416"],["417"],["416"],["417"],"'Text' is defined but never used.",["416"],["417"],["416"],["417"],["416"],["417"],"'PropTypes' is defined but never used.",["416"],["417"],"'SET_ERROR' is defined but never used.","'SHOW_NOTIFICATION' is defined but never used.","'type' is assigned a value but never used.","'payload' is assigned a value but never used.",["416"],["417"],"'Api' is defined but never used.","'requestTransactionList' is defined but never used.","'setFilter' is defined but never used.","'setFilter' is assigned a value but never used.",["416"],["417"],["416"],["417"],"'isDuration' is defined but never used.",["416"],["417"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation"]