{"ast":null,"code":"import { SET_ERROR } from '../actions/transactionActions';\nimport { showMessage, SHOW_NOTIFICATION, hideMessage } from '../actions/notificationActions';\nimport { debounce } from '../debounce'; //redux-pack\n\nimport { KEY, LIFECYCLE } from 'redux-pack'; //import {FETCH_TRANSACTION_LIST,createTransaction} from '../actions/transactionPackActions'\n\nconst debouceRunner = debounce(action => action(), 4000);\nexport default (store => nextRunner => action => {\n  const type = action.type,\n        meta = action.meta;\n\n  if (meta && meta.notification) {\n    const _meta$notification = meta.notification,\n          success = _meta$notification.success,\n          error = _meta$notification.error;\n\n    if (success && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n      //성공\n      store.dispatch(showMessage(success));\n      debouceRunner(() => store.dispatch(hideMessage()));\n    } else if (error && meta[KEY.LIFECYCLE] === LIFECYCLE.FAILURE) {\n      //실패\n      store.dispatch(showMessage(error, true));\n      debouceRunner(() => store.dispatch(hideMessage()));\n    }\n  }\n\n  return nextRunner(action);\n});","map":{"version":3,"sources":["C:/React/coin_traders/src/middlewares/notificationEffects.js"],"names":["SET_ERROR","showMessage","SHOW_NOTIFICATION","hideMessage","debounce","KEY","LIFECYCLE","debouceRunner","action","store","nextRunner","type","meta","notification","success","error","SUCCESS","dispatch","FAILURE"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,+BAAxB;AACA,SAAQC,WAAR,EAAoBC,iBAApB,EAAsCC,WAAtC,QAAwD,gCAAxD;AACA,SAAQC,QAAR,QAAuB,aAAvB,C,CACA;;AACA,SAAQC,GAAR,EAAYC,SAAZ,QAA4B,YAA5B,C,CACA;;AAEA,MAAMC,aAAa,GAAGH,QAAQ,CAACI,MAAM,IAAGA,MAAM,EAAhB,EAAmB,IAAnB,CAA9B;AAEA,gBAAeC,KAAK,IAAIC,UAAU,IAAGF,MAAM,IAAE;AAAA,QAClCG,IADkC,GACrBH,MADqB,CAClCG,IADkC;AAAA,QAC7BC,IAD6B,GACrBJ,MADqB,CAC7BI,IAD6B;;AAEzC,MAAGA,IAAI,IAAIA,IAAI,CAACC,YAAhB,EAA6B;AAAA,+BACCD,IAAI,CAACC,YADN;AAAA,UAClBC,OADkB,sBAClBA,OADkB;AAAA,UACRC,KADQ,sBACRA,KADQ;;AAGzB,QAAGD,OAAO,IAAEF,IAAI,CAACP,GAAG,CAACC,SAAL,CAAJ,KAAsBA,SAAS,CAACU,OAA5C,EAAoD;AAAC;AACjDP,MAAAA,KAAK,CAACQ,QAAN,CAAehB,WAAW,CAACa,OAAD,CAA1B;AACAP,MAAAA,aAAa,CAAC,MAAKE,KAAK,CAACQ,QAAN,CAAed,WAAW,EAA1B,CAAN,CAAb;AACH,KAHD,MAIK,IAAGY,KAAK,IAAIH,IAAI,CAACP,GAAG,CAACC,SAAL,CAAJ,KAAwBA,SAAS,CAACY,OAA9C,EAAsD;AAAE;AACzDT,MAAAA,KAAK,CAACQ,QAAN,CAAehB,WAAW,CAACc,KAAD,EAAO,IAAP,CAA1B;AACAR,MAAAA,aAAa,CAAC,MAAIE,KAAK,CAACQ,QAAN,CAAed,WAAW,EAA1B,CAAL,CAAb;AACH;AAEJ;;AAID,SAAOO,UAAU,CAACF,MAAD,CAAjB;AAEH,CApBD","sourcesContent":["import {SET_ERROR} from '../actions/transactionActions';\r\nimport {showMessage,SHOW_NOTIFICATION,hideMessage} from '../actions/notificationActions';\r\nimport {debounce} from '../debounce';\r\n//redux-pack\r\nimport {KEY,LIFECYCLE} from 'redux-pack'\r\n//import {FETCH_TRANSACTION_LIST,createTransaction} from '../actions/transactionPackActions'\r\n\r\nconst debouceRunner = debounce(action=> action(),4000);\r\n\r\nexport default store => nextRunner=> action=>{\r\n    const {type,meta} = action;\r\n    if(meta && meta.notification){\r\n        const {success , error} = meta.notification;\r\n\r\n        if(success&&meta[KEY.LIFECYCLE]===LIFECYCLE.SUCCESS){//성공\r\n            store.dispatch(showMessage(success))\r\n            debouceRunner(() =>store.dispatch(hideMessage()));\r\n        }\r\n        else if(error && meta[KEY.LIFECYCLE] === LIFECYCLE.FAILURE){ //실패\r\n            store.dispatch(showMessage(error,true));\r\n            debouceRunner(()=>store.dispatch(hideMessage()));\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    return nextRunner(action);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}