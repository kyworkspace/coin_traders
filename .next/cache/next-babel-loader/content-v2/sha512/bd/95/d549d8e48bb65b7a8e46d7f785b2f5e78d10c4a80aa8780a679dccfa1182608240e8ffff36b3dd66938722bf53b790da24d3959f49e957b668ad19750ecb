{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\coin_traders\\\\src\\\\ui\\\\Text.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, css } from \"./withStyles\";\n\nclass Text extends PureComponent {\n  render() {\n    const _this$props = this.props,\n          children = _this$props.children,\n          bold = _this$props.bold,\n          light = _this$props.light,\n          styles = _this$props.styles,\n          large = _this$props.large,\n          xlarge = _this$props.xlarge,\n          small = _this$props.small,\n          xsmall = _this$props.xsmall,\n          primary = _this$props.primary,\n          secondary = _this$props.secondary,\n          inverse = _this$props.inverse;\n    return /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, css(styles.default, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge, secondary && styles.secondary, primary && styles.primary, bold && styles.bold, light && styles.light, inverse && styles.inverse)), {}, {\n      children: children\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nText.propTypes = {\n  children: PropTypes.node.isRequired,\n  bold: PropTypes.bool,\n  light: PropTypes.bool,\n  xsmall: PropTypes.bool,\n  small: PropTypes.bool,\n  large: PropTypes.bool,\n  xlarge: PropTypes.bool,\n  secondary: PropTypes.bool,\n  primary: PropTypes.bool,\n  inverse: PropTypes.bool\n};\nexport default withStyles(({\n  color,\n  fontWeight,\n  size,\n  lineHeight\n}) => ({\n  default: {\n    color: color.default,\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    fontWeight: fontWeight.normal\n  },\n  xlarge: {\n    fontSize: size.xg,\n    lineHeight: lineHeight.xg\n  },\n  large: {\n    fontSize: size.lg,\n    lineHeight: lineHeight.lg\n  },\n  small: {\n    fontSize: size.sm,\n    lineHeight: lineHeight.sm\n  },\n  xsmall: {\n    fontSize: size.xs,\n    lineHeight: lineHeight.xs\n  },\n  primary: {\n    color: color.primary\n  },\n  secondary: {\n    color: color.secondary\n  },\n  light: {\n    fontWeight: fontWeight.light\n  },\n  bold: {\n    fontWeight: fontWeight.bold\n  },\n  inverse: {\n    color: color.white\n  }\n}))(Text);","map":{"version":3,"sources":["C:/React/coin_traders/src/ui/Text.jsx"],"names":["React","PureComponent","PropTypes","withStyles","css","Text","render","props","children","bold","light","styles","large","xlarge","small","xsmall","primary","secondary","inverse","default","propTypes","node","isRequired","bool","color","fontWeight","size","lineHeight","fontSize","md","normal","xg","lg","sm","xs","white"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, css } from \"./withStyles\";\r\n\r\nclass Text extends PureComponent {\r\n  render() {\r\n    const {\r\n      children,\r\n      bold,\r\n      light,\r\n      styles,\r\n      large,\r\n      xlarge,\r\n      small,\r\n      xsmall,\r\n      primary,\r\n      secondary,\r\n      inverse,\r\n    } = this.props;\r\n    return (\r\n      <span\r\n        {...css(\r\n          styles.default,\r\n          xsmall && styles.xsmall,\r\n          small && styles.small,\r\n          large && styles.large,\r\n          xlarge && styles.xlarge,\r\n          secondary && styles.secondary,\r\n          primary && styles.primary,\r\n          bold && styles.bold,\r\n          light && styles.light,\r\n          inverse && styles.inverse\r\n        )}\r\n      >\r\n        {children}\r\n      </span>\r\n    );\r\n  }\r\n}\r\n\r\nText.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  bold: PropTypes.bool,\r\n  light: PropTypes.bool,\r\n  xsmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  xlarge: PropTypes.bool,\r\n  secondary: PropTypes.bool,\r\n  primary: PropTypes.bool,\r\n  inverse: PropTypes.bool,\r\n};\r\n\r\nexport default withStyles(({ color, fontWeight, size, lineHeight }) => ({\r\n  default: {\r\n    color: color.default,\r\n    fontSize: size.md,\r\n    lineHeight: lineHeight.md,\r\n    fontWeight: fontWeight.normal,\r\n  },\r\n  xlarge: {\r\n    fontSize: size.xg,\r\n    lineHeight: lineHeight.xg,\r\n  },\r\n  large: {\r\n    fontSize: size.lg,\r\n    lineHeight: lineHeight.lg,\r\n  },\r\n  small: {\r\n    fontSize: size.sm,\r\n    lineHeight: lineHeight.sm,\r\n  },\r\n  xsmall: {\r\n    fontSize: size.xs,\r\n    lineHeight: lineHeight.xs,\r\n  },\r\n  primary: {\r\n    color: color.primary,\r\n  },\r\n  secondary: {\r\n    color: color.secondary,\r\n  },\r\n  light: {\r\n    fontWeight: fontWeight.light,\r\n  },\r\n  bold: {\r\n    fontWeight: fontWeight.bold,\r\n  },\r\n  inverse: {\r\n    color: color.white,\r\n  },\r\n}))(Text);\r\n"]},"metadata":{},"sourceType":"module"}