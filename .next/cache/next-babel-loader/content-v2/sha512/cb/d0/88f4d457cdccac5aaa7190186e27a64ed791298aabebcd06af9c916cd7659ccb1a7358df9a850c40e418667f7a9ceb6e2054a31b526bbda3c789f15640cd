{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\React\\\\coin_traders\\\\src\\\\components\\\\withLoading.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport default ((loadingMessage = '로딩중') => WrappedComponent => {\n  const displayName = WrappedComponent.displayName,\n        componentName = WrappedComponent.name;\n  const wrappedComponentName = displayName || componentName;\n\n  function WithLoading(_ref) {\n    let isLoading = _ref.isLoading,\n        props = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n    if (isLoading) {\n      return loadingMessage;\n    }\n\n    return /*#__PURE__*/_jsxDEV(WrappedComponent, _objectSpread({}, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  WithLoading.displayName = \"withLoading(\".concat(wrappedComponentName, \")\");\n  return WithLoading;\n});","map":{"version":3,"sources":["C:/React/coin_traders/src/components/withLoading.jsx"],"names":["React","loadingMessage","WrappedComponent","displayName","componentName","name","wrappedComponentName","WithLoading","isLoading","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,gBAAe,CAACC,cAAc,GAAG,KAAlB,KAA4BC,gBAAgB,IAAI;AAAA,QACrDC,WADqD,GAChBD,gBADgB,CACrDC,WADqD;AAAA,QAClCC,aADkC,GAChBF,gBADgB,CACxCG,IADwC;AAE7D,QAAMC,oBAAoB,GAAGH,WAAW,IAAIC,aAA5C;;AAEA,WAASG,WAAT,OAA8C;AAAA,QAAvBC,SAAuB,QAAvBA,SAAuB;AAAA,QAATC,KAAS;;AAC5C,QAAID,SAAJ,EAAe;AACb,aAAOP,cAAP;AACD;;AAED,wBAAO,QAAC,gBAAD,oBAAsBQ,KAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACDF,EAAAA,WAAW,CAACJ,WAAZ,yBAAyCG,oBAAzC;AACA,SAAOC,WAAP;AACD,CAbD","sourcesContent":["import React from 'react';\n\nexport default (loadingMessage = '로딩중') => WrappedComponent => {\n  const { displayName, name: componentName } = WrappedComponent;\n  const wrappedComponentName = displayName || componentName;\n\n  function WithLoading({ isLoading, ...props }) {\n    if (isLoading) {\n      return loadingMessage;\n    }\n\n    return <WrappedComponent {...props} />;\n  }\n  WithLoading.displayName = `withLoading(${wrappedComponentName})`;\n  return WithLoading;\n};\n"]},"metadata":{},"sourceType":"module"}