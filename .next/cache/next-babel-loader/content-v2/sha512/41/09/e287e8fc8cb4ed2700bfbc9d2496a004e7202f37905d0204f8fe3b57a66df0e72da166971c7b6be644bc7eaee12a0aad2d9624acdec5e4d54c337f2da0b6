{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\coin_traders\\\\pages\\\\_document.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Document, { Html, Main, Head, NextScript } from 'next/document';\nimport { StyleSheetServer } from 'aphrodite';\n\nclass MyDocument extends Document {\n  static async getInitialProps({\n    renderPage\n  }) {\n    const {\n      html,\n      css\n    } = StyleSheetServer.renderStatic(() => renderPage());\n    const {\n      renderedClassNames: ids\n    } = css;\n    return _objectSpread(_objectSpread({}, html), {}, {\n      css,\n      ids\n    });\n  }\n\n  constructor(props) {\n    super(props);\n    /* Take the renderedClassNames from aphrodite (as generated\n    in getInitialProps) and assign them to __NEXT_DATA__ so that they\n    are accessible to the client for rehydration. */\n\n    const {\n      __NEXT_DATA__,\n      ids\n    } = props;\n\n    if (ids) {\n      __NEXT_DATA__.ids = this.props.ids;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Html, {\n      children: [/*#__PURE__*/_jsxDEV(Head, {\n        children: [/*#__PURE__*/_jsxDEV(\"style\", {\n          children: `\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: #eeeeee;\n}\n          `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n          \"data-aphrodite\": true,\n          dangerouslySetInnerHTML: {\n            __html: this.props.css.content\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"body\", {\n        children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NextScript, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default MyDocument;","map":{"version":3,"sources":["C:/React/coin_traders/pages/_document.js"],"names":["React","Document","Html","Main","Head","NextScript","StyleSheetServer","MyDocument","getInitialProps","renderPage","html","css","renderStatic","renderedClassNames","ids","constructor","props","__NEXT_DATA__","render","__html","content"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,eAAvD;AACA,SAASC,gBAAT,QAAiC,WAAjC;;AAEA,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAChC,eAAaO,eAAb,CAA6B;AAAEC,IAAAA;AAAF,GAA7B,EAA6C;AAC3C,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAgBL,gBAAgB,CAACM,YAAjB,CAA8B,MAAMH,UAAU,EAA9C,CAAtB;AACA,UAAM;AAAEI,MAAAA,kBAAkB,EAAEC;AAAtB,QAA8BH,GAApC;AACA,2CAAYD,IAAZ;AAAkBC,MAAAA,GAAlB;AAAuBG,MAAAA;AAAvB;AACD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA;AACJ;AACA;;AACI,UAAM;AAAEC,MAAAA,aAAF;AAAiBH,MAAAA;AAAjB,QAAyBE,KAA/B;;AACA,QAAIF,GAAJ,EAAS;AACPG,MAAAA,aAAa,CAACH,GAAd,GAAoB,KAAKE,KAAL,CAAWF,GAA/B;AACD;AACF;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD;AAAA,gCACE;AAAA,oBAAS;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATU;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAO,gCAAP;AAAsB,UAAA,uBAAuB,EAAE;AAAEC,YAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWL,GAAX,CAAeS;AAAzB;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE;AAAA,gCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAxC+B;;AA2ClC,eAAeb,UAAf","sourcesContent":["import React from 'react';\nimport Document, { Html, Main, Head, NextScript } from 'next/document';\nimport { StyleSheetServer } from 'aphrodite';\n\nclass MyDocument extends Document {\n  static async getInitialProps({ renderPage }) {\n    const { html, css } = StyleSheetServer.renderStatic(() => renderPage());\n    const { renderedClassNames: ids } = css;\n    return { ...html, css, ids };\n  }\n\n  constructor(props) {\n    super(props);\n    /* Take the renderedClassNames from aphrodite (as generated\n    in getInitialProps) and assign them to __NEXT_DATA__ so that they\n    are accessible to the client for rehydration. */\n    const { __NEXT_DATA__, ids } = props;\n    if (ids) {\n      __NEXT_DATA__.ids = this.props.ids;\n    }\n  }\n\n  render() {\n    return (\n      <Html>\n        <Head>\n          <style>{`\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: Roboto, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background-color: #eeeeee;\n}\n          `}</style>\n          <style data-aphrodite dangerouslySetInnerHTML={{ __html: this.props.css.content }} />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    );\n  }\n}\n\nexport default MyDocument;\n"]},"metadata":{},"sourceType":"module"}