{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\coin_traders\\\\src\\\\components\\\\main\\\\TransactionTable.jsx\";\n// 검색 목록\n//데이터 테이블 컴포넌트 사용, 프로퍼티에는 배열형 값이 들어있으므로 map() 함수를 이용해서 출력\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Table from \"../../ui/Table\";\nimport TableRow from \"../../ui/TableRow\";\nimport TableCell from \"../../ui/TableCell\";\nimport TableHead from \"../../ui/TableHead\";\nimport TableBody from \"../../ui/TableBody\";\nimport withLoading from \"../withLoading\";\nimport Spacing from \"../../ui/Spacing\";\nimport Text from \"../../ui/Text\";\n\nconst LoadingMessage = /*#__PURE__*/_jsxDEV(Spacing, {\n  vertical: 4,\n  horizontal: 2,\n  children: /*#__PURE__*/_jsxDEV(Text, {\n    large: true,\n    children: \"\\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uB4E4\\uC774\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 15,\n  columnNumber: 3\n}, this);\n\nclass TransactionTable extends Component {\n  render() {\n    const transactions = this.props.transactions;\n    return /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"\\uCF54\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"\\uC2DC\\uAC00\\uCD1D\\uC561\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: \"\\uD604\\uC7AC\\uC2DC\\uC138\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"\\uAC70\\uB798 \\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: transactions.map(({\n          id,\n          name,\n          totalPrice,\n          currentPrice,\n          dateTime\n        }) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: totalPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"center\",\n            children: currentPrice\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: dateTime\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nTransactionTable.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.shape({// name: PropTypes.string,\n    // id: PropTypes.number,\n    // totalPrice: PropTypes.number,\n    //currentPrice: PropTypes.number,\n    // dateTime: PropTypes.string,\n  }))\n};\nexport default withLoading(LoadingMessage)(TransactionTable);","map":{"version":3,"sources":["C:/React/coin_traders/src/components/main/TransactionTable.jsx"],"names":["React","Component","PropTypes","Table","TableRow","TableCell","TableHead","TableBody","withLoading","Spacing","Text","LoadingMessage","TransactionTable","render","transactions","props","map","id","name","totalPrice","currentPrice","dateTime","propTypes","arrayOf","shape"],"mappings":";;AAAA;AACA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,IAAP,MAAiB,eAAjB;;AAEA,MAAMC,cAAc,gBAClB,QAAC,OAAD;AAAS,EAAA,QAAQ,EAAE,CAAnB;AAAsB,EAAA,UAAU,EAAG,CAAnC;AAAA,yBACE,QAAC,IAAD;AAAM,IAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF;;AAOA,MAAMC,gBAAN,SAA+BX,SAA/B,CAAyC;AACvCY,EAAAA,MAAM,GAAG;AAAA,UACCC,YADD,GACkB,KAAKC,KADvB,CACCD,YADD;AAEP,wBACE,QAAC,KAAD;AAAA,8BACE,QAAC,SAAD;AAAA,+BACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,SAAD;AAAA,kBACGA,YAAY,CAACE,GAAb,CACC,CAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,IAAN;AAAYC,UAAAA,UAAZ;AAAwBC,UAAAA,YAAxB;AAAsCC,UAAAA;AAAtC,SAAD,kBACE,QAAC,QAAD;AAAA,kCACE,QAAC,SAAD;AAAA,sBAAYH;AAAZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,QAAjB;AAAA,sBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,QAAjB;AAAA,sBAA2BC;AAA3B;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAC,OAAjB;AAAA,sBAA0BC;AAA1B;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAeJ,EAAf;AAAA;AAAA;AAAA;AAAA,gBAFH;AADH;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AA3BsC;;AA8BzCL,gBAAgB,CAACU,SAAjB,GAA6B;AAC3BR,EAAAA,YAAY,EAAEZ,SAAS,CAACqB,OAAV,CACZrB,SAAS,CAACsB,KAAV,CAAgB,CACd;AACA;AACA;AACA;AACA;AALc,GAAhB,CADY;AADa,CAA7B;AAYA,eAAehB,WAAW,CAACG,cAAD,CAAX,CAA4BC,gBAA5B,CAAf","sourcesContent":["// 검색 목록\r\n//데이터 테이블 컴포넌트 사용, 프로퍼티에는 배열형 값이 들어있으므로 map() 함수를 이용해서 출력\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Table from \"../../ui/Table\";\r\nimport TableRow from \"../../ui/TableRow\";\r\nimport TableCell from \"../../ui/TableCell\";\r\nimport TableHead from \"../../ui/TableHead\";\r\nimport TableBody from \"../../ui/TableBody\";\r\nimport withLoading from \"../withLoading\";\r\nimport Spacing from \"../../ui/Spacing\";\r\nimport Text from \"../../ui/Text\";\r\n\r\nconst LoadingMessage = (\r\n  <Spacing vertical={4} horizontal ={2}>\r\n    <Text large>데이터를 불러들이고 있습니다.</Text>\r\n  </Spacing>\r\n)\r\n\r\n\r\nclass TransactionTable extends Component {\r\n  render() {\r\n    const { transactions } = this.props;\r\n    return (\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\">코인</TableCell>\r\n            <TableCell align=\"center\">시가총액</TableCell>\r\n            <TableCell align=\"center\">현재시세</TableCell>\r\n            <TableCell align=\"right\">거래 시간</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {transactions.map(\r\n            ({ id, name, totalPrice, currentPrice, dateTime }) => (\r\n              <TableRow key={id}>\r\n                <TableCell>{name}</TableCell>\r\n                <TableCell align=\"center\">{totalPrice}</TableCell>\r\n                <TableCell align=\"center\">{currentPrice}</TableCell>\r\n                <TableCell align=\"right\">{dateTime}</TableCell>\r\n              </TableRow>\r\n            )\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  }\r\n}\r\n\r\nTransactionTable.propTypes = {\r\n  transactions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      // name: PropTypes.string,\r\n      // id: PropTypes.number,\r\n      // totalPrice: PropTypes.number,\r\n      //currentPrice: PropTypes.number,\r\n      // dateTime: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default withLoading(LoadingMessage)(TransactionTable);\r\n"]},"metadata":{},"sourceType":"module"}