{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\coin_traders\\\\src\\\\ui\\\\Input.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, css, withStylesPropTypes } from \"./withStyles\";\n\nclass Input extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    const {\n      name,\n      onChange\n    } = this.props;\n\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  setRef(ref) {\n    this.ref = ref;\n  }\n\n  render() {\n    const {\n      errorMessage,\n      label,\n      value,\n      name,\n      type,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", _objectSpread(_objectSpread({}, css(styles.wrapper)), {}, {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", _objectSpread(_objectSpread({\n        htmlFor: `input_${name}`\n      }, css(styles.label, errorMessage && styles.errorLabel)), {}, {\n        children: errorMessage || label\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, css(styles.input, errorMessage && styles.error, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge)), {}, {\n        id: `input_${name}`,\n        ref: this.setRef,\n        type: type,\n        onChange: this.handleChange,\n        value: value\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nInput.propTypes = _objectSpread(_objectSpread({}, withStylesPropTypes), {}, {\n  type: PropTypes.oneOf([\"text\", \"number\", \"price\"]),\n  name: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  errorMessage: PropTypes.string,\n  label: PropTypes.string,\n  onChange: PropTypes.func,\n  autoFocus: PropTypes.bool\n});\nInput.defaultProps = {\n  onChange: () => {},\n  autoFocus: false\n};\nexport default withStyles(({\n  depth,\n  unit,\n  color,\n  size,\n  lineHeight\n}) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: \"relative\"\n  },\n  label: {\n    display: \"block\",\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: \"pointer\"\n  },\n  input: {\n    marginTop: 2,\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    padding: unit * 1.5,\n    border: 1,\n    borderColor: color.primary,\n    borderStyle: \"solid\",\n    borderRadius: 4,\n    outline: 0,\n    \":focus\": {\n      boxShadow: \"0 0 0px 2px rgba(0, 0, 0, 0.3)\"\n    }\n  },\n  xlarge: {\n    fontSize: size.xg\n  },\n  large: {\n    fontSize: size.lg\n  },\n  small: {\n    fontSize: size.sm,\n    padding: unit\n  },\n  errorLabel: {\n    color: color.error\n  },\n  error: {\n    borderColor: color.error\n  }\n}))(Input);","map":{"version":3,"sources":["C:/React/coin_traders/src/ui/Input.jsx"],"names":["React","PureComponent","PropTypes","withStyles","css","withStylesPropTypes","Input","constructor","props","setRef","bind","handleChange","e","name","onChange","target","value","componentDidMount","autoFocus","ref","focus","render","errorMessage","label","type","styles","large","xlarge","small","xsmall","wrapper","errorLabel","input","error","propTypes","oneOf","string","isRequired","oneOfType","number","func","bool","defaultProps","depth","unit","color","size","lineHeight","border","padding","position","display","fontSize","xs","top","left","cursor","marginTop","md","borderColor","primary","borderStyle","borderRadius","outline","boxShadow","xg","lg","sm"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles, css, withStylesPropTypes } from \"./withStyles\";\r\n\r\nclass Input extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setRef = this.setRef.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(e) {\r\n    const { name, onChange } = this.props;\r\n    if (onChange) {\r\n      onChange(name, e.target.value);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.autoFocus) {\r\n      this.ref.focus();\r\n    }\r\n  }\r\n  setRef(ref) {\r\n    this.ref = ref;\r\n  }\r\n  render() {\r\n    const {\r\n      errorMessage,\r\n      label,\r\n      value,\r\n      name,\r\n      type,\r\n      styles,\r\n      large,\r\n      xlarge,\r\n      small,\r\n      xsmall,\r\n    } = this.props;\r\n\r\n    return (\r\n      <fieldset {...css(styles.wrapper)}>\r\n        <label\r\n          htmlFor={`input_${name}`}\r\n          {...css(styles.label, errorMessage && styles.errorLabel)}\r\n        >\r\n          {errorMessage || label}\r\n        </label>\r\n        <input\r\n          {...css(\r\n            styles.input,\r\n            errorMessage && styles.error,\r\n            xsmall && styles.xsmall,\r\n            small && styles.small,\r\n            large && styles.large,\r\n            xlarge && styles.xlarge\r\n          )}\r\n          id={`input_${name}`}\r\n          ref={this.setRef}\r\n          type={type}\r\n          onChange={this.handleChange}\r\n          value={value}\r\n        />\r\n      </fieldset>\r\n    );\r\n  }\r\n}\r\n\r\nInput.propTypes = {\r\n  ...withStylesPropTypes,\r\n  type: PropTypes.oneOf([\"text\", \"number\", \"price\"]),\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  errorMessage: PropTypes.string,\r\n  label: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  autoFocus: PropTypes.bool,\r\n};\r\n\r\nInput.defaultProps = {\r\n  onChange: () => {},\r\n  autoFocus: false,\r\n};\r\n\r\nexport default withStyles(({ depth, unit, color, size, lineHeight }) => ({\r\n  wrapper: {\r\n    border: 0,\r\n    padding: 0,\r\n    position: \"relative\",\r\n  },\r\n  label: {\r\n    display: \"block\",\r\n    fontSize: size.xs,\r\n    top: 2,\r\n    left: unit * 2,\r\n    cursor: \"pointer\",\r\n  },\r\n  input: {\r\n    marginTop: 2,\r\n    fontSize: size.md,\r\n    lineHeight: lineHeight.md,\r\n    padding: unit * 1.5,\r\n    border: 1,\r\n    borderColor: color.primary,\r\n    borderStyle: \"solid\",\r\n    borderRadius: 4,\r\n    outline: 0,\r\n    \":focus\": {\r\n      boxShadow: \"0 0 0px 2px rgba(0, 0, 0, 0.3)\",\r\n    },\r\n  },\r\n  xlarge: {\r\n    fontSize: size.xg,\r\n  },\r\n  large: {\r\n    fontSize: size.lg,\r\n  },\r\n  small: {\r\n    fontSize: size.sm,\r\n    padding: unit,\r\n  },\r\n  errorLabel: {\r\n    color: color.error,\r\n  },\r\n  error: {\r\n    borderColor: color.error,\r\n  },\r\n}))(Input);\r\n"]},"metadata":{},"sourceType":"module"}