{"ast":null,"code":"import Api from '../Api';\nimport { showMessage } from \"./notificationActions\";\nexport const LOADING_TRANSACTION_LIST = 'transaction/LOADING_TRANSACTION_LIST';\nexport const SET_TRANSACTION_LIST = 'transaction/SET_TRANSACTION_LIST';\nexport const SET_ERROR = 'transaction/SET_ERROR';\nexport const TRADE_COMPLETE = 'transaction/TRADE_COMPLETE';\nexport function tradeComplete() {\n  return {\n    type: TRADE_COMPLETE\n  };\n}\nexport function setError(errorMessage) {\n  return {\n    type: SET_ERROR,\n    payload: {\n      errorMessage\n    }\n  };\n}\nexport function setTransactionList(transactions) {\n  console.log(\"트랜잭션 액션\");\n  return {\n    type: SET_TRANSACTION_LIST,\n    payload: transactions\n  };\n}\nexport function createTransaction(data, onComplete) {\n  return dispatch => Api.post('/transactions', data).then(({\n    data\n  }) => {\n    dispatch(tradeComplete());\n    onComplete();\n  }, error => dispatch(setError(error.response.data.errorMessage)));\n}\nexport function requestTransactionList(params) {\n  return dispatch => {\n    dispatch(loading());\n    Api.get('/transactions', {\n      params\n    }).then(({\n      data\n    }) => dispatch(setTransactionList(data)), error => {\n      dispatch(setError(error.response.data.errorMessage)); //  dispatch(showMessage(error.response.data.errorMessage,true))\n    }); //axios는 에러가 발생할때 then의 두번째 인자에 해당하는 함수를 호출함\n  }; //함수를 반환함\n}\nexport function loading() {\n  return {\n    type: LOADING_TRANSACTION_LIST\n  };\n}","map":{"version":3,"sources":["C:/React/coin_traders/src/actions/transactionActions.js"],"names":["Api","showMessage","LOADING_TRANSACTION_LIST","SET_TRANSACTION_LIST","SET_ERROR","TRADE_COMPLETE","tradeComplete","type","setError","errorMessage","payload","setTransactionList","transactions","console","log","createTransaction","data","onComplete","dispatch","post","then","error","response","requestTransactionList","params","loading","get"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,QAAhB;AACA,SAAQC,WAAR,QAA0B,uBAA1B;AAEA,OAAO,MAAMC,wBAAwB,GAAG,sCAAjC;AACP,OAAO,MAAMC,oBAAoB,GAAG,kCAA7B;AACP,OAAO,MAAMC,SAAS,GAAG,uBAAlB;AACP,OAAO,MAAMC,cAAc,GAAG,4BAAvB;AAEP,OAAO,SAASC,aAAT,GAAwB;AAC3B,SAAO;AAACC,IAAAA,IAAI,EAAGF;AAAR,GAAP;AACH;AAED,OAAO,SAASG,QAAT,CAAkBC,YAAlB,EAA+B;AAClC,SAAO;AACHF,IAAAA,IAAI,EAAGH,SADJ;AAEHM,IAAAA,OAAO,EAAG;AAACD,MAAAA;AAAD;AAFP,GAAP;AAIH;AAED,OAAO,SAASE,kBAAT,CAA4BC,YAA5B,EAA0C;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,SAAO;AACHP,IAAAA,IAAI,EAAGJ,oBADJ;AAEHO,IAAAA,OAAO,EAAGE;AAFP,GAAP;AAIH;AAED,OAAO,SAASG,iBAAT,CAA2BC,IAA3B,EAAgCC,UAAhC,EAA2C;AAC9C,SAAOC,QAAQ,IAAIlB,GAAG,CAACmB,IAAJ,CAAS,eAAT,EAAyBH,IAAzB,EAA+BI,IAA/B,CAAoC,CAAC;AAACJ,IAAAA;AAAD,GAAD,KAAU;AAC7DE,IAAAA,QAAQ,CAACZ,aAAa,EAAd,CAAR;AACAW,IAAAA,UAAU;AACb,GAHkB,EAInBI,KAAK,IAAIH,QAAQ,CAACV,QAAQ,CAACa,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBP,YAArB,CAAT,CAJE,CAAnB;AAKH;AAED,OAAO,SAASc,sBAAT,CAAgCC,MAAhC,EAAuC;AAC1C,SAAQN,QAAD,IAAa;AAChBA,IAAAA,QAAQ,CAACO,OAAO,EAAR,CAAR;AACAzB,IAAAA,GAAG,CAAC0B,GAAJ,CAAQ,eAAR,EAAwB;AAACF,MAAAA;AAAD,KAAxB,EACCJ,IADD,CAEI,CAAC;AAACJ,MAAAA;AAAD,KAAD,KAAUE,QAAQ,CAACP,kBAAkB,CAACK,IAAD,CAAnB,CAFtB,EAGKK,KAAK,IAAG;AACJH,MAAAA,QAAQ,CAACV,QAAQ,CAACa,KAAK,CAACC,QAAN,CAAeN,IAAf,CAAoBP,YAArB,CAAT,CAAR,CADI,CAEL;AACC,KANT,EAFgB,CAUhB;AACH,GAXD,CAD0C,CAc1C;AACH;AAED,OAAO,SAASgB,OAAT,GAAkB;AACrB,SAAO;AACHlB,IAAAA,IAAI,EAAGL;AADJ,GAAP;AAGH","sourcesContent":["import Api from '../Api';\r\nimport {showMessage} from \"./notificationActions\";\r\n\r\nexport const LOADING_TRANSACTION_LIST = 'transaction/LOADING_TRANSACTION_LIST';\r\nexport const SET_TRANSACTION_LIST = 'transaction/SET_TRANSACTION_LIST';\r\nexport const SET_ERROR = 'transaction/SET_ERROR';\r\nexport const TRADE_COMPLETE = 'transaction/TRADE_COMPLETE';\r\n\r\nexport function tradeComplete(){\r\n    return {type : TRADE_COMPLETE};\r\n}\r\n\r\nexport function setError(errorMessage){\r\n    return {\r\n        type : SET_ERROR,\r\n        payload : {errorMessage},\r\n    }\r\n}\r\n\r\nexport function setTransactionList(transactions) {\r\n    console.log(\"트랜잭션 액션\")\r\n    return {\r\n        type : SET_TRANSACTION_LIST,\r\n        payload : transactions,\r\n    }\r\n}\r\n\r\nexport function createTransaction(data,onComplete){\r\n    return dispatch => Api.post('/transactions',data).then(({data})=>{\r\n        dispatch(tradeComplete());\r\n        onComplete()\r\n    },\r\n    error => dispatch(setError(error.response.data.errorMessage)));\r\n}\r\n\r\nexport function requestTransactionList(params){\r\n    return (dispatch)=> {\r\n        dispatch(loading());\r\n        Api.get('/transactions',{params})\r\n        .then(\r\n            ({data})=>dispatch(setTransactionList(data))\r\n            ,error =>{\r\n                 dispatch(setError(error.response.data.errorMessage));\r\n                //  dispatch(showMessage(error.response.data.errorMessage,true))\r\n                },\r\n            );\r\n        //axios는 에러가 발생할때 then의 두번째 인자에 해당하는 함수를 호출함\r\n    }\r\n    \r\n    //함수를 반환함\r\n}\r\n\r\nexport function loading(){\r\n    return {\r\n        type : LOADING_TRANSACTION_LIST,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}