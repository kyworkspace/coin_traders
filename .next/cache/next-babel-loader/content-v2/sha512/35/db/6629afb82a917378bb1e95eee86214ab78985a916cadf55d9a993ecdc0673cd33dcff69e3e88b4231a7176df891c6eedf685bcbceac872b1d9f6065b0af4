{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nvar _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nvar _interopRequireWildcard3 = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.render = render;\nexports.renderError = renderError;\nexports.default = exports.emitter = exports.router = exports.version = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _interopRequireWildcard2 = _interopRequireDefault(require(\"@babel/runtime/helpers/interopRequireWildcard\"));\n\nrequire(\"@next/polyfill-module\");\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _headManagerContext = require(\"../next-server/lib/head-manager-context\");\n\nvar _mitt = _interopRequireDefault(require(\"../next-server/lib/mitt\"));\n\nvar _routerContext = require(\"../next-server/lib/router-context\");\n\nvar _router = require(\"../next-server/lib/router/router\");\n\nvar _isDynamic = require(\"../next-server/lib/router/utils/is-dynamic\");\n\nvar querystring = _interopRequireWildcard3(require(\"../next-server/lib/router/utils/querystring\"));\n\nvar envConfig = _interopRequireWildcard3(require(\"../next-server/lib/runtime-config\"));\n\nvar _utils = require(\"../next-server/lib/utils\");\n\nvar _headManager = _interopRequireDefault(require(\"./head-manager\"));\n\nvar _pageLoader = _interopRequireDefault(require(\"./page-loader\"));\n\nvar _performanceRelayer = _interopRequireDefault(require(\"./performance-relayer\"));\n\nvar _router2 = require(\"./router\");\n/* global location */\n\n\nconst data = JSON.parse(document.getElementById('__NEXT_DATA__').textContent);\nwindow.__NEXT_DATA__ = data;\nconst version = \"10.0.5\";\nexports.version = version;\n\nconst looseToArray = input => [].slice.call(input);\n\nconst hydrateProps = data.props,\n      hydrateErr = data.err,\n      page = data.page,\n      query = data.query,\n      buildId = data.buildId,\n      assetPrefix = data.assetPrefix,\n      runtimeConfig = data.runtimeConfig,\n      dynamicIds = data.dynamicIds,\n      isFallback = data.isFallback,\n      locales = data.locales,\n      domainLocales = data.domainLocales;\nlet locale = data.locale,\n    defaultLocale = data.defaultLocale;\nconst prefix = assetPrefix || ''; // With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n\n__webpack_public_path__ = \"\".concat(prefix, \"/_next/\"); //eslint-disable-line\n// Initialize next/config with the environment configuration\n\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {}\n});\nlet asPath = (0, _utils.getURL)(); // make sure not to attempt stripping basePath for 404s\n\nif ((0, _router.hasBasePath)(asPath)) {\n  asPath = (0, _router.delBasePath)(asPath);\n}\n\nif (process.env.__NEXT_I18N_SUPPORT) {\n  const _require = require('../next-server/lib/i18n/normalize-locale-path'),\n        normalizeLocalePath = _require.normalizeLocalePath;\n\n  const _require2 = require('../next-server/lib/i18n/detect-domain-locale'),\n        detectDomainLocale = _require2.detectDomainLocale;\n\n  const _require3 = require('../next-server/lib/router/utils/parse-relative-url'),\n        parseRelativeUrl = _require3.parseRelativeUrl;\n\n  const _require4 = require('../next-server/lib/router/utils/format-url'),\n        formatUrl = _require4.formatUrl;\n\n  if (locales) {\n    const parsedAs = parseRelativeUrl(asPath);\n    const localePathResult = normalizeLocalePath(parsedAs.pathname, locales);\n\n    if (localePathResult.detectedLocale) {\n      parsedAs.pathname = localePathResult.pathname;\n      asPath = formatUrl(parsedAs);\n    } else {\n      // derive the default locale if it wasn't detected in the asPath\n      // since we don't prerender static pages with all possible default\n      // locales\n      defaultLocale = locale;\n    } // attempt detecting default locale based on hostname\n\n\n    const detectedDomain = detectDomainLocale(process.env.__NEXT_I18N_DOMAINS, window.location.hostname); // TODO: investigate if defaultLocale needs to be populated after\n    // hydration to prevent mismatched renders\n\n    if (detectedDomain) {\n      defaultLocale = detectedDomain.defaultLocale;\n    }\n  }\n}\n\nconst pageLoader = new _pageLoader.default(buildId, prefix);\n\nconst register = ([r, f]) => pageLoader.routeLoader.onEntrypoint(r, f);\n\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map(p => setTimeout(() => register(p), 0));\n}\n\nwindow.__NEXT_P = [];\nwindow.__NEXT_P.push = register;\nconst headManager = (0, _headManager.default)();\nconst appElement = document.getElementById('__next');\nlet lastAppProps;\nlet lastRenderReject;\nlet webpackHMR;\nlet router;\nexports.router = router;\nlet CachedComponent;\nlet CachedApp, onPerfEntry;\n\nclass Container extends _react.default.Component {\n  componentDidCatch(componentErr, info) {\n    this.props.fn(componentErr, info);\n  }\n\n  componentDidMount() {\n    this.scrollToHash(); // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n\n    if (router.isSsr && (isFallback || data.nextExport && ((0, _isDynamic.isDynamicRoute)(router.pathname) || location.search) || hydrateProps && hydrateProps.__N_SSG && location.search)) {\n      // update query on mount for exported pages\n      router.replace(router.pathname + '?' + String(querystring.assign(querystring.urlQueryToSearchParams(router.query), new URLSearchParams(location.search))), asPath, {\n        // @ts-ignore\n        // WARNING: `_h` is an internal option for handing Next.js\n        // client-side hydration. Your app should _never_ use this property.\n        // It may change at any time without notice.\n        _h: 1,\n        // Fallback pages must trigger the data fetch, so the transition is\n        // not shallow.\n        // Other pages (strictly updating query) happens shallowly, as data\n        // requirements would already be present.\n        shallow: !isFallback\n      });\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash();\n  }\n\n  scrollToHash() {\n    let _location = location,\n        hash = _location.hash;\n    hash = hash && hash.substring(1);\n    if (!hash) return;\n    const el = document.getElementById(hash);\n    if (!el) return; // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n\n    setTimeout(() => el.scrollIntoView(), 0);\n  }\n\n  render() {\n    if (false) {\n      return this.props.children;\n    } else {\n      const _require5 = require('@next/react-dev-overlay/lib/client'),\n            ReactDevOverlay = _require5.ReactDevOverlay;\n\n      return /*#__PURE__*/_react.default.createElement(ReactDevOverlay, null, this.props.children);\n    }\n  }\n\n}\n\nconst emitter = (0, _mitt.default)();\nexports.emitter = emitter;\n\nvar _default = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(opts = {}) {\n    var appEntrypoint, app, mod, initialErr, pageEntrypoint, _require6, isValidElementType, _require7, getNodeError, renderCtx;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          // This makes sure this specific lines are removed in production\n          if (true) {\n            webpackHMR = opts.webpackHMR;\n          }\n\n          _context.next = 3;\n          return pageLoader.routeLoader.whenEntrypoint('/_app');\n\n        case 3:\n          appEntrypoint = _context.sent;\n\n          if (!('error' in appEntrypoint)) {\n            _context.next = 6;\n            break;\n          }\n\n          throw appEntrypoint.error;\n\n        case 6:\n          app = appEntrypoint.component, mod = appEntrypoint.exports;\n          CachedApp = app;\n\n          if (mod && mod.reportWebVitals) {\n            onPerfEntry = ({\n              id,\n              name,\n              startTime,\n              value,\n              duration,\n              entryType,\n              entries\n            }) => {\n              // Combines timestamp with random number for unique ID\n              const uniqueID = \"\".concat(Date.now(), \"-\").concat(Math.floor(Math.random() * (9e12 - 1)) + 1e12);\n              let perfStartEntry;\n\n              if (entries && entries.length) {\n                perfStartEntry = entries[0].startTime;\n              }\n\n              mod.reportWebVitals({\n                id: id || uniqueID,\n                name,\n                startTime: startTime || perfStartEntry,\n                value: value == null ? duration : value,\n                label: entryType === 'mark' || entryType === 'measure' ? 'custom' : 'web-vital'\n              });\n            };\n          }\n\n          initialErr = hydrateErr;\n          _context.prev = 10;\n\n          if (!(true && hydrateErr)) {\n            _context.next = 15;\n            break;\n          }\n\n          _context.t0 = {\n            error: hydrateErr\n          };\n          _context.next = 18;\n          break;\n\n        case 15:\n          _context.next = 17;\n          return pageLoader.routeLoader.whenEntrypoint(page);\n\n        case 17:\n          _context.t0 = _context.sent;\n\n        case 18:\n          pageEntrypoint = _context.t0;\n\n          if (!('error' in pageEntrypoint)) {\n            _context.next = 21;\n            break;\n          }\n\n          throw pageEntrypoint.error;\n\n        case 21:\n          CachedComponent = pageEntrypoint.component;\n\n          if (!true) {\n            _context.next = 26;\n            break;\n          }\n\n          _require6 = require('react-is'), isValidElementType = _require6.isValidElementType;\n\n          if (isValidElementType(CachedComponent)) {\n            _context.next = 26;\n            break;\n          }\n\n          throw new Error(\"The default export is not a React Component in page: \\\"\".concat(page, \"\\\"\"));\n\n        case 26:\n          _context.next = 31;\n          break;\n\n        case 28:\n          _context.prev = 28;\n          _context.t1 = _context[\"catch\"](10);\n          // This catches errors like throwing in the top level of a module\n          initialErr = _context.t1;\n\n        case 31:\n          if (true) {\n            _require7 = require('@next/react-dev-overlay/lib/client'), getNodeError = _require7.getNodeError; // Server-side runtime errors need to be re-thrown on the client-side so\n            // that the overlay is rendered.\n\n            if (initialErr) {\n              if (initialErr === hydrateErr) {\n                setTimeout(() => {\n                  let error;\n\n                  try {\n                    // Generate a new error object. We `throw` it because some browsers\n                    // will set the `stack` when thrown, and we want to ensure ours is\n                    // not overridden when we re-throw it below.\n                    throw new Error(initialErr.message);\n                  } catch (e) {\n                    error = e;\n                  }\n\n                  error.name = initialErr.name;\n                  error.stack = initialErr.stack;\n                  const node = getNodeError(error);\n                  throw node;\n                });\n              } // We replaced the server-side error with a client-side error, and should\n              // no longer rewrite the stack trace to a Node error.\n              else {\n                  setTimeout(() => {\n                    throw initialErr;\n                  });\n                }\n            }\n          }\n\n          if (!window.__NEXT_PRELOADREADY) {\n            _context.next = 35;\n            break;\n          }\n\n          _context.next = 35;\n          return window.__NEXT_PRELOADREADY(dynamicIds);\n\n        case 35:\n          exports.router = router = (0, _router2.createRouter)(page, query, asPath, {\n            initialProps: hydrateProps,\n            pageLoader,\n            App: CachedApp,\n            Component: CachedComponent,\n            wrapApp,\n            err: initialErr,\n            isFallback: Boolean(isFallback),\n            subscription: (info, App, scroll) => render(Object.assign({}, info, {\n              App,\n              scroll\n            })),\n            locale,\n            locales,\n            defaultLocale,\n            domainLocales\n          }); // call init-client middleware\n\n          if (process.env.__NEXT_PLUGINS) {\n            // @ts-ignore\n            // eslint-disable-next-line\n            Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-init-client!'))).then(initClientModule => {\n              return initClientModule.default({\n                router\n              });\n            }).catch(initClientErr => {\n              console.error('Error calling client-init for plugins', initClientErr);\n            });\n          }\n\n          renderCtx = {\n            App: CachedApp,\n            initial: true,\n            Component: CachedComponent,\n            props: hydrateProps,\n            err: initialErr\n          };\n\n          if (!false) {\n            _context.next = 43;\n            break;\n          }\n\n          render(renderCtx);\n          return _context.abrupt(\"return\", emitter);\n\n        case 43:\n          return _context.abrupt(\"return\", {\n            emitter,\n            render,\n            renderCtx\n          });\n\n        case 44:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee, null, [[10, 28]]);\n  }));\n\n  return function _default() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexports.default = _default;\n\nfunction render(_x) {\n  return _render.apply(this, arguments);\n} // This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\n\n\nfunction _render() {\n  _render = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(renderingProps) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          if (!renderingProps.err) {\n            _context2.next = 4;\n            break;\n          }\n\n          _context2.next = 3;\n          return renderError(renderingProps);\n\n        case 3:\n          return _context2.abrupt(\"return\");\n\n        case 4:\n          _context2.prev = 4;\n          _context2.next = 7;\n          return doRender(renderingProps);\n\n        case 7:\n          _context2.next = 16;\n          break;\n\n        case 9:\n          _context2.prev = 9;\n          _context2.t0 = _context2[\"catch\"](4);\n\n          if (!_context2.t0.cancelled) {\n            _context2.next = 13;\n            break;\n          }\n\n          throw _context2.t0;\n\n        case 13:\n          if (true) {\n            // Ensure this error is displayed in the overlay in development\n            setTimeout(() => {\n              throw _context2.t0;\n            });\n          }\n\n          _context2.next = 16;\n          return renderError((0, _extends2.default)({}, renderingProps, {\n            err: _context2.t0\n          }));\n\n        case 16:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2, null, [[4, 9]]);\n  }));\n  return _render.apply(this, arguments);\n}\n\nfunction renderError(renderErrorProps) {\n  const App = renderErrorProps.App,\n        err = renderErrorProps.err; // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n\n  if (true) {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError(); // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: []\n    });\n  }\n\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    Promise.resolve().then(() => (0, _interopRequireWildcard2.default)(require('next-plugin-loader?middleware=on-error-client!'))).then(onClientErrorModule => {\n      return onClientErrorModule.default({\n        err\n      });\n    }).catch(onClientErrorErr => {\n      console.error('error calling on-error-client for plugins', onClientErrorErr);\n    });\n  } // Make sure we log the error to the console, otherwise users can't track down issues.\n\n\n  console.error(err);\n  return pageLoader.loadPage('/_error').then(({\n    page: ErrorComponent,\n    styleSheets\n  }) => {\n    // In production we do a normal render with the `ErrorComponent` as component.\n    // If we've gotten here upon initial render, we can use the props from the server.\n    // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n    const AppTree = wrapApp(App);\n    const appCtx = {\n      Component: ErrorComponent,\n      AppTree,\n      router,\n      ctx: {\n        err,\n        pathname: page,\n        query,\n        asPath,\n        AppTree\n      }\n    };\n    return Promise.resolve(renderErrorProps.props ? renderErrorProps.props : (0, _utils.loadGetInitialProps)(App, appCtx)).then(initProps => doRender((0, _extends2.default)({}, renderErrorProps, {\n      err,\n      Component: ErrorComponent,\n      styleSheets,\n      props: initProps\n    })));\n  });\n}\n\nlet reactRoot = null;\nlet shouldUseHydrate = typeof _reactDom.default.hydrate === 'function';\n\nfunction renderReactElement(reactEl, domEl) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = {\n        hydrate: true\n      };\n      reactRoot = process.env.__NEXT_REACT_MODE === 'concurrent' ? _reactDom.default.unstable_createRoot(domEl, opts) : _reactDom.default.unstable_createBlockingRoot(domEl, opts);\n    }\n\n    reactRoot.render(reactEl);\n  } else {\n    // mark start of hydrate/render\n    if (_utils.ST) {\n      performance.mark('beforeRender');\n    } // The check for `.hydrate` is there to support React alternatives like preact\n\n\n    if (shouldUseHydrate) {\n      _reactDom.default.hydrate(reactEl, domEl, markHydrateComplete);\n\n      shouldUseHydrate = false;\n    } else {\n      _reactDom.default.render(reactEl, domEl, markRenderComplete);\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterHydrate'); // mark end of hydration\n\n  performance.measure('Next.js-before-hydration', 'navigationStart', 'beforeRender');\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate');\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry);\n  }\n\n  clearMarks();\n}\n\nfunction markRenderComplete() {\n  if (!_utils.ST) return;\n  performance.mark('afterRender'); // mark end of render\n\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark');\n\n  if (!navStartEntries.length) {\n    return;\n  }\n\n  performance.measure('Next.js-route-change-to-render', navStartEntries[0].name, 'beforeRender');\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender');\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry);\n    performance.getEntriesByName('Next.js-route-change-to-render').forEach(onPerfEntry);\n  }\n\n  clearMarks();\n  ['Next.js-route-change-to-render', 'Next.js-render'].forEach(measure => performance.clearMeasures(measure));\n}\n\nfunction clearMarks() {\n  ;\n  ['beforeRender', 'afterHydrate', 'afterRender', 'routeChange'].forEach(mark => performance.clearMarks(mark));\n}\n\nfunction AppContainer({\n  children\n}) {\n  return /*#__PURE__*/_react.default.createElement(Container, {\n    fn: error => renderError({\n      App: CachedApp,\n      err: error\n    }).catch(err => console.error('Error rendering page: ', err))\n  }, /*#__PURE__*/_react.default.createElement(_routerContext.RouterContext.Provider, {\n    value: (0, _router2.makePublicRouterInstance)(router)\n  }, /*#__PURE__*/_react.default.createElement(_headManagerContext.HeadManagerContext.Provider, {\n    value: headManager\n  }, children)));\n}\n\n_c = AppContainer;\n\nconst wrapApp = App => wrappedAppProps => {\n  const appProps = (0, _extends2.default)({}, wrappedAppProps, {\n    Component: CachedComponent,\n    err: hydrateErr,\n    router\n  });\n  return /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps));\n};\n\nfunction doRender(input) {\n  let App = input.App,\n      Component = input.Component,\n      props = input.props,\n      err = input.err;\n  let styleSheets = 'initial' in input ? undefined : input.styleSheets;\n  Component = Component || lastAppProps.Component;\n  props = props || lastAppProps.props;\n  const appProps = (0, _extends2.default)({}, props, {\n    Component,\n    err,\n    router\n  }); // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n\n  lastAppProps = appProps;\n  let canceled = false;\n  let resolvePromise;\n  const renderPromise = new Promise((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject();\n    }\n\n    resolvePromise = () => {\n      lastRenderReject = null;\n      resolve();\n    };\n\n    lastRenderReject = () => {\n      canceled = true;\n      lastRenderReject = null;\n      const error = new Error('Cancel rendering route');\n      error.cancelled = true;\n      reject(error);\n    };\n  }); // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n\n  function onStart() {\n    if (!styleSheets || // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    true) {\n      return false;\n    }\n\n    const currentStyleTags = looseToArray(document.querySelectorAll('style[data-n-href]'));\n    const currentHrefs = new Set(currentStyleTags.map(tag => tag.getAttribute('data-n-href')));\n    const noscript = document.querySelector('noscript[data-n-css]');\n    const nonce = noscript == null ? void 0 : noscript.getAttribute('data-n-css');\n    styleSheets.forEach(({\n      href,\n      text\n    }) => {\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style');\n        styleTag.setAttribute('data-n-href', href);\n        styleTag.setAttribute('media', 'x');\n\n        if (nonce) {\n          styleTag.setAttribute('nonce', nonce);\n        }\n\n        document.head.appendChild(styleTag);\n        styleTag.appendChild(document.createTextNode(text));\n      }\n    });\n    return true;\n  }\n\n  function onHeadCommit() {\n    if ( // We use `style-loader` in development, so we don't need to do anything\n    // unless we're in production:\n    false && // We can skip this during hydration. Running it wont cause any harm, but\n    // we may as well save the CPU cycles:\n    styleSheets && // Ensure this render was not canceled\n    !canceled) {\n      const desiredHrefs = new Set(styleSheets.map(s => s.href));\n      const currentStyleTags = looseToArray(document.querySelectorAll('style[data-n-href]'));\n      const currentHrefs = currentStyleTags.map(tag => tag.getAttribute('data-n-href')); // Toggle `<style>` tags on or off depending on if they're needed:\n\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media');\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x');\n        }\n      } // Reorder styles into intended order:\n\n\n      let referenceNode = document.querySelector('noscript[data-n-css]');\n\n      if ( // This should be an invariant:\n      referenceNode) {\n        styleSheets.forEach(({\n          href\n        }) => {\n          const targetTag = document.querySelector(\"style[data-n-href=\\\"\".concat(href, \"\\\"]\"));\n\n          if ( // This should be an invariant:\n          targetTag) {\n            referenceNode.parentNode.insertBefore(targetTag, referenceNode.nextSibling);\n            referenceNode = targetTag;\n          }\n        });\n      } // Finally, clean up server rendered stylesheets:\n\n\n      looseToArray(document.querySelectorAll('link[data-n-p]')).forEach(el => {\n        el.parentNode.removeChild(el);\n      }); // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n\n      getComputedStyle(document.body, 'height');\n    }\n\n    if (input.scroll) {\n      window.scrollTo(input.scroll.x, input.scroll.y);\n    }\n  }\n\n  function onRootCommit() {\n    resolvePromise();\n  }\n\n  const elem = /*#__PURE__*/_react.default.createElement(Root, {\n    callback: onRootCommit\n  }, /*#__PURE__*/_react.default.createElement(Head, {\n    callback: onHeadCommit\n  }), /*#__PURE__*/_react.default.createElement(AppContainer, null, /*#__PURE__*/_react.default.createElement(App, appProps)));\n\n  onStart(); // We catch runtime errors using componentDidCatch which will trigger renderError\n\n  renderReactElement(process.env.__NEXT_STRICT_MODE ? /*#__PURE__*/_react.default.createElement(_react.default.StrictMode, null, elem) : elem, appElement);\n  return renderPromise;\n}\n\nfunction Root({\n  callback,\n  children\n}) {\n  _s();\n\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  _react.default.useLayoutEffect(() => callback(), [callback]);\n\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    _react.default.useEffect(() => {\n      window.__NEXT_HYDRATED = true;\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB();\n      }\n    }, []);\n  } // We should ask to measure the Web Vitals after rendering completes so we\n  // don't cause any hydration delay:\n\n\n  _react.default.useEffect(() => {\n    (0, _performanceRelayer.default)(onPerfEntry);\n  }, []);\n\n  return children;\n} // Dummy component that we render as a child of Root so that we can\n// toggle the correct styles before the page is rendered.\n\n\n_s(Root, \"KDoBXdlwSU+O+uFsByO25XxhKDU=\");\n\n_c2 = Root;\n\nfunction Head({\n  callback\n}) {\n  _s2();\n\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  _react.default.useLayoutEffect(() => callback(), [callback]);\n\n  return null;\n}\n\n_s2(Head, \"n7/vCynhJvM+pLkyL2DMQUF0odM=\");\n\n_c3 = Head;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AppContainer\");\n$RefreshReg$(_c2, \"Root\");\n$RefreshReg$(_c3, \"Head\");","map":{"version":3,"sources":["../../client/index.tsx"],"names":["data","JSON","document","window","version","process","__NEXT_VERSION","looseToArray","props","err","domainLocales","defaultLocale","prefix","__webpack_public_path__","envConfig","serverRuntimeConfig","publicRuntimeConfig","runtimeConfig","asPath","require","parsedAs","parseRelativeUrl","localePathResult","normalizeLocalePath","formatUrl","detectedDomain","detectDomainLocale","pageLoader","PageLoader","register","p","setTimeout","headManager","appElement","React","Component","componentDidCatch","componentDidMount","router","isFallback","location","hydrateProps","String","querystring","_h","shallow","componentDidUpdate","scrollToHash","hash","el","render","emitter","opts","webpackHMR","appEntrypoint","component","exports","CachedApp","mod","onPerfEntry","uniqueID","Date","Math","entries","perfStartEntry","id","startTime","value","label","entryType","initialErr","pageEntrypoint","error","CachedComponent","isValidElementType","node","getNodeError","initialProps","App","Boolean","subscription","Object","initClientModule","initClientErr","console","renderCtx","initial","renderingProps","renderError","doRender","renderErr","styleSheets","onClientErrorModule","onClientErrorErr","page","AppTree","wrapApp","appCtx","ctx","pathname","Promise","renderErrorProps","initProps","reactRoot","shouldUseHydrate","ReactDOM","hydrate","ST","performance","clearMarks","navStartEntries","measure","mark","wrappedAppProps","appProps","input","lastAppProps","canceled","renderPromise","lastRenderReject","resolvePromise","resolve","reject","currentStyleTags","currentHrefs","tag","noscript","nonce","styleTag","desiredHrefs","s","idx","referenceNode","targetTag","getComputedStyle","elem","onStart","renderReactElement","callback"],"mappings":"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","sourcesContent":["/* global location */\nimport '@next/polyfill-module'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport { HeadManagerContext } from '../next-server/lib/head-manager-context'\nimport mitt from '../next-server/lib/mitt'\nimport { RouterContext } from '../next-server/lib/router-context'\nimport Router, {\n  AppComponent,\n  AppProps,\n  delBasePath,\n  hasBasePath,\n  PrivateRouteInfo,\n} from '../next-server/lib/router/router'\nimport { isDynamicRoute } from '../next-server/lib/router/utils/is-dynamic'\nimport * as querystring from '../next-server/lib/router/utils/querystring'\nimport * as envConfig from '../next-server/lib/runtime-config'\nimport {\n  getURL,\n  loadGetInitialProps,\n  NEXT_DATA,\n  ST,\n} from '../next-server/lib/utils'\nimport initHeadManager from './head-manager'\nimport PageLoader, { StyleSheetTuple } from './page-loader'\nimport measureWebVitals from './performance-relayer'\nimport { createRouter, makePublicRouterInstance } from './router'\n\n/// <reference types=\"react-dom/experimental\" />\n\ndeclare let __webpack_public_path__: string\n\ndeclare global {\n  interface Window {\n    /* test fns */\n    __NEXT_HYDRATED?: boolean\n    __NEXT_HYDRATED_CB?: () => void\n\n    /* prod */\n    __NEXT_PRELOADREADY?: (ids?: string[]) => void\n    __NEXT_DATA__: NEXT_DATA\n    __NEXT_P: any[]\n  }\n}\n\ntype RenderRouteInfo = PrivateRouteInfo & {\n  App: AppComponent\n  scroll?: { x: number; y: number } | null\n}\ntype RenderErrorProps = Omit<RenderRouteInfo, 'Component' | 'styleSheets'>\n\nconst data: typeof window['__NEXT_DATA__'] = JSON.parse(\n  document.getElementById('__NEXT_DATA__')!.textContent!\n)\nwindow.__NEXT_DATA__ = data\n\nexport const version = process.env.__NEXT_VERSION\n\nconst looseToArray = <T extends {}>(input: any): T[] => [].slice.call(input)\n\nconst {\n  props: hydrateProps,\n  err: hydrateErr,\n  page,\n  query,\n  buildId,\n  assetPrefix,\n  runtimeConfig,\n  dynamicIds,\n  isFallback,\n  locales,\n  domainLocales,\n} = data\n\nlet { locale, defaultLocale } = data\n\nconst prefix = assetPrefix || ''\n\n// With dynamic assetPrefix it's no longer possible to set assetPrefix at the build time\n// So, this is how we do it in the client side at runtime\n__webpack_public_path__ = `${prefix}/_next/` //eslint-disable-line\n// Initialize next/config with the environment configuration\nenvConfig.setConfig({\n  serverRuntimeConfig: {},\n  publicRuntimeConfig: runtimeConfig || {},\n})\n\nlet asPath = getURL()\n\n// make sure not to attempt stripping basePath for 404s\nif (hasBasePath(asPath)) {\n  asPath = delBasePath(asPath)\n}\n\nif (process.env.__NEXT_I18N_SUPPORT) {\n  const {\n    normalizeLocalePath,\n  } = require('../next-server/lib/i18n/normalize-locale-path') as typeof import('../next-server/lib/i18n/normalize-locale-path')\n\n  const {\n    detectDomainLocale,\n  } = require('../next-server/lib/i18n/detect-domain-locale') as typeof import('../next-server/lib/i18n/detect-domain-locale')\n\n  const {\n    parseRelativeUrl,\n  } = require('../next-server/lib/router/utils/parse-relative-url') as typeof import('../next-server/lib/router/utils/parse-relative-url')\n\n  const {\n    formatUrl,\n  } = require('../next-server/lib/router/utils/format-url') as typeof import('../next-server/lib/router/utils/format-url')\n\n  if (locales) {\n    const parsedAs = parseRelativeUrl(asPath)\n    const localePathResult = normalizeLocalePath(parsedAs.pathname, locales)\n\n    if (localePathResult.detectedLocale) {\n      parsedAs.pathname = localePathResult.pathname\n      asPath = formatUrl(parsedAs)\n    } else {\n      // derive the default locale if it wasn't detected in the asPath\n      // since we don't prerender static pages with all possible default\n      // locales\n      defaultLocale = locale\n    }\n\n    // attempt detecting default locale based on hostname\n    const detectedDomain = detectDomainLocale(\n      process.env.__NEXT_I18N_DOMAINS as any,\n      window.location.hostname\n    )\n\n    // TODO: investigate if defaultLocale needs to be populated after\n    // hydration to prevent mismatched renders\n    if (detectedDomain) {\n      defaultLocale = detectedDomain.defaultLocale\n    }\n  }\n}\n\ntype RegisterFn = (input: [string, () => void]) => void\n\nconst pageLoader = new PageLoader(buildId, prefix)\nconst register: RegisterFn = ([r, f]) =>\n  pageLoader.routeLoader.onEntrypoint(r, f)\nif (window.__NEXT_P) {\n  // Defer page registration for another tick. This will increase the overall\n  // latency in hydrating the page, but reduce the total blocking time.\n  window.__NEXT_P.map((p) => setTimeout(() => register(p), 0))\n}\nwindow.__NEXT_P = []\n;(window.__NEXT_P as any).push = register\n\nconst headManager = initHeadManager()\nconst appElement = document.getElementById('__next')\n\nlet lastAppProps: AppProps\nlet lastRenderReject: (() => void) | null\nlet webpackHMR: any\nexport let router: Router\nlet CachedComponent: React.ComponentType\nlet CachedApp: AppComponent, onPerfEntry: (metric: any) => void\n\nclass Container extends React.Component<{\n  fn: (err: Error, info?: any) => void\n}> {\n  componentDidCatch(componentErr: Error, info: any) {\n    this.props.fn(componentErr, info)\n  }\n\n  componentDidMount() {\n    this.scrollToHash()\n\n    // We need to replace the router state if:\n    // - the page was (auto) exported and has a query string or search (hash)\n    // - it was auto exported and is a dynamic route (to provide params)\n    // - if it is a client-side skeleton (fallback render)\n    if (\n      router.isSsr &&\n      (isFallback ||\n        (data.nextExport &&\n          (isDynamicRoute(router.pathname) || location.search)) ||\n        (hydrateProps && hydrateProps.__N_SSG && location.search))\n    ) {\n      // update query on mount for exported pages\n      router.replace(\n        router.pathname +\n          '?' +\n          String(\n            querystring.assign(\n              querystring.urlQueryToSearchParams(router.query),\n              new URLSearchParams(location.search)\n            )\n          ),\n        asPath,\n        {\n          // @ts-ignore\n          // WARNING: `_h` is an internal option for handing Next.js\n          // client-side hydration. Your app should _never_ use this property.\n          // It may change at any time without notice.\n          _h: 1,\n          // Fallback pages must trigger the data fetch, so the transition is\n          // not shallow.\n          // Other pages (strictly updating query) happens shallowly, as data\n          // requirements would already be present.\n          shallow: !isFallback,\n        }\n      )\n    }\n  }\n\n  componentDidUpdate() {\n    this.scrollToHash()\n  }\n\n  scrollToHash() {\n    let { hash } = location\n    hash = hash && hash.substring(1)\n    if (!hash) return\n\n    const el = document.getElementById(hash)\n    if (!el) return\n\n    // If we call scrollIntoView() in here without a setTimeout\n    // it won't scroll properly.\n    setTimeout(() => el.scrollIntoView(), 0)\n  }\n\n  render() {\n    if (process.env.NODE_ENV === 'production') {\n      return this.props.children\n    } else {\n      const { ReactDevOverlay } = require('@next/react-dev-overlay/lib/client')\n      return <ReactDevOverlay>{this.props.children}</ReactDevOverlay>\n    }\n  }\n}\n\nexport const emitter = mitt()\n\nexport default async (opts: { webpackHMR?: any } = {}) => {\n  // This makes sure this specific lines are removed in production\n  if (process.env.NODE_ENV === 'development') {\n    webpackHMR = opts.webpackHMR\n  }\n\n  const appEntrypoint = await pageLoader.routeLoader.whenEntrypoint('/_app')\n  if ('error' in appEntrypoint) {\n    throw appEntrypoint.error\n  }\n\n  const { component: app, exports: mod } = appEntrypoint\n  CachedApp = app as AppComponent\n\n  if (mod && mod.reportWebVitals) {\n    onPerfEntry = ({\n      id,\n      name,\n      startTime,\n      value,\n      duration,\n      entryType,\n      entries,\n    }) => {\n      // Combines timestamp with random number for unique ID\n      const uniqueID = `${Date.now()}-${\n        Math.floor(Math.random() * (9e12 - 1)) + 1e12\n      }`\n      let perfStartEntry\n\n      if (entries && entries.length) {\n        perfStartEntry = entries[0].startTime\n      }\n\n      mod.reportWebVitals({\n        id: id || uniqueID,\n        name,\n        startTime: startTime || perfStartEntry,\n        value: value == null ? duration : value,\n        label:\n          entryType === 'mark' || entryType === 'measure'\n            ? 'custom'\n            : 'web-vital',\n      })\n    }\n  }\n\n  let initialErr = hydrateErr\n\n  try {\n    const pageEntrypoint =\n      // The dev server fails to serve script assets when there's a hydration\n      // error, so we need to skip waiting for the entrypoint.\n      process.env.NODE_ENV === 'development' && hydrateErr\n        ? { error: hydrateErr }\n        : await pageLoader.routeLoader.whenEntrypoint(page)\n    if ('error' in pageEntrypoint) {\n      throw pageEntrypoint.error\n    }\n    CachedComponent = pageEntrypoint.component\n\n    if (process.env.NODE_ENV !== 'production') {\n      const { isValidElementType } = require('react-is')\n      if (!isValidElementType(CachedComponent)) {\n        throw new Error(\n          `The default export is not a React Component in page: \"${page}\"`\n        )\n      }\n    }\n  } catch (error) {\n    // This catches errors like throwing in the top level of a module\n    initialErr = error\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    const { getNodeError } = require('@next/react-dev-overlay/lib/client')\n    // Server-side runtime errors need to be re-thrown on the client-side so\n    // that the overlay is rendered.\n    if (initialErr) {\n      if (initialErr === hydrateErr) {\n        setTimeout(() => {\n          let error\n          try {\n            // Generate a new error object. We `throw` it because some browsers\n            // will set the `stack` when thrown, and we want to ensure ours is\n            // not overridden when we re-throw it below.\n            throw new Error(initialErr!.message)\n          } catch (e) {\n            error = e\n          }\n\n          error.name = initialErr!.name\n          error.stack = initialErr!.stack\n\n          const node = getNodeError(error)\n          throw node\n        })\n      }\n      // We replaced the server-side error with a client-side error, and should\n      // no longer rewrite the stack trace to a Node error.\n      else {\n        setTimeout(() => {\n          throw initialErr\n        })\n      }\n    }\n  }\n\n  if (window.__NEXT_PRELOADREADY) {\n    await window.__NEXT_PRELOADREADY(dynamicIds)\n  }\n\n  router = createRouter(page, query, asPath, {\n    initialProps: hydrateProps,\n    pageLoader,\n    App: CachedApp,\n    Component: CachedComponent,\n    wrapApp,\n    err: initialErr,\n    isFallback: Boolean(isFallback),\n    subscription: (info, App, scroll) =>\n      render(\n        Object.assign<\n          {},\n          Omit<RenderRouteInfo, 'App' | 'scroll'>,\n          Pick<RenderRouteInfo, 'App' | 'scroll'>\n        >({}, info, {\n          App,\n          scroll,\n        }) as RenderRouteInfo\n      ),\n    locale,\n    locales,\n    defaultLocale,\n    domainLocales,\n  })\n\n  // call init-client middleware\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-init-client!')\n      .then((initClientModule) => {\n        return initClientModule.default({ router })\n      })\n      .catch((initClientErr) => {\n        console.error('Error calling client-init for plugins', initClientErr)\n      })\n  }\n\n  const renderCtx: RenderRouteInfo = {\n    App: CachedApp,\n    initial: true,\n    Component: CachedComponent,\n    props: hydrateProps,\n    err: initialErr,\n  }\n\n  if (process.env.NODE_ENV === 'production') {\n    render(renderCtx)\n    return emitter\n  } else {\n    return { emitter, render, renderCtx }\n  }\n}\n\nexport async function render(renderingProps: RenderRouteInfo) {\n  if (renderingProps.err) {\n    await renderError(renderingProps)\n    return\n  }\n\n  try {\n    await doRender(renderingProps)\n  } catch (renderErr) {\n    // bubble up cancelation errors\n    if (renderErr.cancelled) {\n      throw renderErr\n    }\n\n    if (process.env.NODE_ENV === 'development') {\n      // Ensure this error is displayed in the overlay in development\n      setTimeout(() => {\n        throw renderErr\n      })\n    }\n    await renderError({ ...renderingProps, err: renderErr })\n  }\n}\n\n// This method handles all runtime and debug errors.\n// 404 and 500 errors are special kind of errors\n// and they are still handle via the main render method.\nexport function renderError(renderErrorProps: RenderErrorProps) {\n  const { App, err } = renderErrorProps\n\n  // In development runtime errors are caught by our overlay\n  // In production we catch runtime errors using componentDidCatch which will trigger renderError\n  if (process.env.NODE_ENV !== 'production') {\n    // A Next.js rendering runtime error is always unrecoverable\n    // FIXME: let's make this recoverable (error in GIP client-transition)\n    webpackHMR.onUnrecoverableError()\n\n    // We need to render an empty <App> so that the `<ReactDevOverlay>` can\n    // render itself.\n    return doRender({\n      App: () => null,\n      props: {},\n      Component: () => null,\n      styleSheets: [],\n    })\n  }\n  if (process.env.__NEXT_PLUGINS) {\n    // @ts-ignore\n    // eslint-disable-next-line\n    import('next-plugin-loader?middleware=on-error-client!')\n      .then((onClientErrorModule) => {\n        return onClientErrorModule.default({ err })\n      })\n      .catch((onClientErrorErr) => {\n        console.error(\n          'error calling on-error-client for plugins',\n          onClientErrorErr\n        )\n      })\n  }\n\n  // Make sure we log the error to the console, otherwise users can't track down issues.\n  console.error(err)\n  return pageLoader\n    .loadPage('/_error')\n    .then(({ page: ErrorComponent, styleSheets }) => {\n      // In production we do a normal render with the `ErrorComponent` as component.\n      // If we've gotten here upon initial render, we can use the props from the server.\n      // Otherwise, we need to call `getInitialProps` on `App` before mounting.\n      const AppTree = wrapApp(App)\n      const appCtx = {\n        Component: ErrorComponent,\n        AppTree,\n        router,\n        ctx: { err, pathname: page, query, asPath, AppTree },\n      }\n      return Promise.resolve(\n        renderErrorProps.props\n          ? renderErrorProps.props\n          : loadGetInitialProps(App, appCtx)\n      ).then((initProps) =>\n        doRender({\n          ...renderErrorProps,\n          err,\n          Component: ErrorComponent,\n          styleSheets,\n          props: initProps,\n        })\n      )\n    })\n}\n\nlet reactRoot: any = null\nlet shouldUseHydrate = typeof ReactDOM.hydrate === 'function'\nfunction renderReactElement(reactEl: JSX.Element, domEl: HTMLElement) {\n  if (process.env.__NEXT_REACT_MODE !== 'legacy') {\n    if (!reactRoot) {\n      const opts = { hydrate: true }\n      reactRoot =\n        process.env.__NEXT_REACT_MODE === 'concurrent'\n          ? (ReactDOM as any).unstable_createRoot(domEl, opts)\n          : (ReactDOM as any).unstable_createBlockingRoot(domEl, opts)\n    }\n    reactRoot.render(reactEl)\n  } else {\n    // mark start of hydrate/render\n    if (ST) {\n      performance.mark('beforeRender')\n    }\n\n    // The check for `.hydrate` is there to support React alternatives like preact\n    if (shouldUseHydrate) {\n      ReactDOM.hydrate(reactEl, domEl, markHydrateComplete)\n      shouldUseHydrate = false\n    } else {\n      ReactDOM.render(reactEl, domEl, markRenderComplete)\n    }\n  }\n}\n\nfunction markHydrateComplete() {\n  if (!ST) return\n\n  performance.mark('afterHydrate') // mark end of hydration\n\n  performance.measure(\n    'Next.js-before-hydration',\n    'navigationStart',\n    'beforeRender'\n  )\n  performance.measure('Next.js-hydration', 'beforeRender', 'afterHydrate')\n\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-hydration').forEach(onPerfEntry)\n  }\n  clearMarks()\n}\n\nfunction markRenderComplete() {\n  if (!ST) return\n\n  performance.mark('afterRender') // mark end of render\n  const navStartEntries = performance.getEntriesByName('routeChange', 'mark')\n\n  if (!navStartEntries.length) {\n    return\n  }\n\n  performance.measure(\n    'Next.js-route-change-to-render',\n    navStartEntries[0].name,\n    'beforeRender'\n  )\n  performance.measure('Next.js-render', 'beforeRender', 'afterRender')\n  if (onPerfEntry) {\n    performance.getEntriesByName('Next.js-render').forEach(onPerfEntry)\n    performance\n      .getEntriesByName('Next.js-route-change-to-render')\n      .forEach(onPerfEntry)\n  }\n  clearMarks()\n  ;['Next.js-route-change-to-render', 'Next.js-render'].forEach((measure) =>\n    performance.clearMeasures(measure)\n  )\n}\n\nfunction clearMarks() {\n  ;[\n    'beforeRender',\n    'afterHydrate',\n    'afterRender',\n    'routeChange',\n  ].forEach((mark) => performance.clearMarks(mark))\n}\n\nfunction AppContainer({\n  children,\n}: React.PropsWithChildren<{}>): React.ReactElement {\n  return (\n    <Container\n      fn={(error) =>\n        renderError({ App: CachedApp, err: error }).catch((err) =>\n          console.error('Error rendering page: ', err)\n        )\n      }\n    >\n      <RouterContext.Provider value={makePublicRouterInstance(router)}>\n        <HeadManagerContext.Provider value={headManager}>\n          {children}\n        </HeadManagerContext.Provider>\n      </RouterContext.Provider>\n    </Container>\n  )\n}\n\nconst wrapApp = (App: AppComponent) => (\n  wrappedAppProps: Record<string, any>\n) => {\n  const appProps: AppProps = {\n    ...wrappedAppProps,\n    Component: CachedComponent,\n    err: hydrateErr,\n    router,\n  }\n  return (\n    <AppContainer>\n      <App {...appProps} />\n    </AppContainer>\n  )\n}\n\nfunction doRender(input: RenderRouteInfo): Promise<any> {\n  let { App, Component, props, err } = input\n  let styleSheets: StyleSheetTuple[] | undefined =\n    'initial' in input ? undefined : input.styleSheets\n  Component = Component || lastAppProps.Component\n  props = props || lastAppProps.props\n\n  const appProps: AppProps = {\n    ...props,\n    Component,\n    err,\n    router,\n  }\n  // lastAppProps has to be set before ReactDom.render to account for ReactDom throwing an error.\n  lastAppProps = appProps\n\n  let canceled = false\n  let resolvePromise: () => void\n  const renderPromise = new Promise<void>((resolve, reject) => {\n    if (lastRenderReject) {\n      lastRenderReject()\n    }\n    resolvePromise = () => {\n      lastRenderReject = null\n      resolve()\n    }\n    lastRenderReject = () => {\n      canceled = true\n      lastRenderReject = null\n\n      const error: any = new Error('Cancel rendering route')\n      error.cancelled = true\n      reject(error)\n    }\n  })\n\n  // This function has a return type to ensure it doesn't start returning a\n  // Promise. It should remain synchronous.\n  function onStart(): boolean {\n    if (\n      !styleSheets ||\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV !== 'production'\n    ) {\n      return false\n    }\n\n    const currentStyleTags = looseToArray<HTMLStyleElement>(\n      document.querySelectorAll('style[data-n-href]')\n    )\n    const currentHrefs = new Set(\n      currentStyleTags.map((tag) => tag.getAttribute('data-n-href'))\n    )\n\n    const noscript = document.querySelector('noscript[data-n-css]')\n    const nonce = noscript?.getAttribute('data-n-css')\n\n    styleSheets.forEach(({ href, text }) => {\n      if (!currentHrefs.has(href)) {\n        const styleTag = document.createElement('style')\n        styleTag.setAttribute('data-n-href', href)\n        styleTag.setAttribute('media', 'x')\n\n        if (nonce) {\n          styleTag.setAttribute('nonce', nonce)\n        }\n\n        document.head.appendChild(styleTag)\n        styleTag.appendChild(document.createTextNode(text))\n      }\n    })\n    return true\n  }\n\n  function onHeadCommit() {\n    if (\n      // We use `style-loader` in development, so we don't need to do anything\n      // unless we're in production:\n      process.env.NODE_ENV === 'production' &&\n      // We can skip this during hydration. Running it wont cause any harm, but\n      // we may as well save the CPU cycles:\n      styleSheets &&\n      // Ensure this render was not canceled\n      !canceled\n    ) {\n      const desiredHrefs = new Set(styleSheets.map((s) => s.href))\n      const currentStyleTags = looseToArray<HTMLStyleElement>(\n        document.querySelectorAll('style[data-n-href]')\n      )\n      const currentHrefs = currentStyleTags.map(\n        (tag) => tag.getAttribute('data-n-href')!\n      )\n\n      // Toggle `<style>` tags on or off depending on if they're needed:\n      for (let idx = 0; idx < currentHrefs.length; ++idx) {\n        if (desiredHrefs.has(currentHrefs[idx])) {\n          currentStyleTags[idx].removeAttribute('media')\n        } else {\n          currentStyleTags[idx].setAttribute('media', 'x')\n        }\n      }\n\n      // Reorder styles into intended order:\n      let referenceNode = document.querySelector('noscript[data-n-css]')\n      if (\n        // This should be an invariant:\n        referenceNode\n      ) {\n        styleSheets.forEach(({ href }) => {\n          const targetTag = document.querySelector(\n            `style[data-n-href=\"${href}\"]`\n          )\n          if (\n            // This should be an invariant:\n            targetTag\n          ) {\n            referenceNode!.parentNode!.insertBefore(\n              targetTag,\n              referenceNode!.nextSibling\n            )\n            referenceNode = targetTag\n          }\n        })\n      }\n\n      // Finally, clean up server rendered stylesheets:\n      looseToArray<HTMLLinkElement>(\n        document.querySelectorAll('link[data-n-p]')\n      ).forEach((el) => {\n        el.parentNode!.removeChild(el)\n      })\n\n      // Force browser to recompute layout, which should prevent a flash of\n      // unstyled content:\n      getComputedStyle(document.body, 'height')\n    }\n\n    if (input.scroll) {\n      window.scrollTo(input.scroll.x, input.scroll.y)\n    }\n  }\n\n  function onRootCommit() {\n    resolvePromise()\n  }\n\n  const elem = (\n    <Root callback={onRootCommit}>\n      <Head callback={onHeadCommit} />\n      <AppContainer>\n        <App {...appProps} />\n      </AppContainer>\n    </Root>\n  )\n\n  onStart()\n\n  // We catch runtime errors using componentDidCatch which will trigger renderError\n  renderReactElement(\n    process.env.__NEXT_STRICT_MODE ? (\n      <React.StrictMode>{elem}</React.StrictMode>\n    ) : (\n      elem\n    ),\n    appElement!\n  )\n\n  return renderPromise\n}\n\nfunction Root({\n  callback,\n  children,\n}: React.PropsWithChildren<{\n  callback: () => void\n}>): React.ReactElement {\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  React.useLayoutEffect(() => callback(), [callback])\n  if (process.env.__NEXT_TEST_MODE) {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      window.__NEXT_HYDRATED = true\n\n      if (window.__NEXT_HYDRATED_CB) {\n        window.__NEXT_HYDRATED_CB()\n      }\n    }, [])\n  }\n  // We should ask to measure the Web Vitals after rendering completes so we\n  // don't cause any hydration delay:\n  React.useEffect(() => {\n    measureWebVitals(onPerfEntry)\n  }, [])\n  return children as React.ReactElement\n}\n\n// Dummy component that we render as a child of Root so that we can\n// toggle the correct styles before the page is rendered.\nfunction Head({ callback }: { callback: () => void }) {\n  // We use `useLayoutEffect` to guarantee the callback is executed\n  // as soon as React flushes the update.\n  React.useLayoutEffect(() => callback(), [callback])\n  return null\n}\n"]},"metadata":{},"sourceType":"script"}