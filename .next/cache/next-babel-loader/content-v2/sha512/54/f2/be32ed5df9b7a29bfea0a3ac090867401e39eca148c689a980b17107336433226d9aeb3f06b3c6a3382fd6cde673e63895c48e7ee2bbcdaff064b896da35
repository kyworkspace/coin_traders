{"ast":null,"code":"import { createSelector } from 'reselect';\nimport { CREATE, UPDATE, FETCH_LIST, FETCH } from './actionTypes';\nexport default function createSelectors(resourceName) {\n  const resourceSelector = state => state[resourceName];\n\n  const entitiesSelector = state => resourceSelector(state).entities;\n\n  const collectionSelector = createSelector([resourceSelector], ({\n    ids,\n    entities\n  }) => ids.map(id => entities[id]));\n\n  const loadingStateSelector = state => resourceSelector(state).loadingState;\n\n  const errorStateSelector = state => resourceSelector(state).errorState;\n\n  const collectionLoadingStateSelector = state => loadingStateSelector(state)[\"\".concat(FETCH_LIST, \"/\").concat(resourceName)];\n\n  const createLoadingStateSelector = state => loadingStateSelector(state)[\"\".concat(CREATE, \"/\").concat(resourceName)];\n\n  const updateLoadingStateSelector = state => loadingStateSelector(state)[\"\".concat(UPDATE, \"/\").concat(resourceName)];\n\n  const memberLoadingStateSelector = state => loadingStateSelector(state)[\"\".concat(FETCH, \"/\").concat(resourceName)];\n\n  const collectionErrorStateSelector = state => errorStateSelector(state)[\"\".concat(FETCH_LIST, \"/\").concat(resourceName)];\n\n  const createErrorStateSelector = state => errorStateSelector(state)[\"\".concat(CREATE, \"/\").concat(resourceName)];\n\n  const updateErrorStateSelector = state => errorStateSelector(state)[\"\".concat(UPDATE, \"/\").concat(resourceName)];\n\n  const memberErrorStateSelector = state => errorStateSelector(state)[\"\".concat(FETCH, \"/\").concat(resourceName)];\n\n  const paginationSelector = state => {\n    const _resourceSelector = resourceSelector(state),\n          pagination = _resourceSelector.pagination;\n\n    return {\n      number: pagination.number || 0,\n      size: pagination.size\n    };\n  };\n\n  return {\n    entitiesSelector,\n    collectionSelector,\n    collectionLoadingStateSelector,\n    createLoadingStateSelector,\n    updateLoadingStateSelector,\n    memberLoadingStateSelector,\n    paginationSelector\n  };\n}","map":{"version":3,"sources":["C:/React/coin_traders/src/api-redux-pack/createSelectors.js"],"names":["createSelector","CREATE","UPDATE","FETCH_LIST","FETCH","createSelectors","resourceName","resourceSelector","state","entitiesSelector","entities","collectionSelector","ids","map","id","loadingStateSelector","loadingState","errorStateSelector","errorState","collectionLoadingStateSelector","createLoadingStateSelector","updateLoadingStateSelector","memberLoadingStateSelector","collectionErrorStateSelector","createErrorStateSelector","updateErrorStateSelector","memberErrorStateSelector","paginationSelector","pagination","number","size"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;AACA,SAAQC,MAAR,EAAeC,MAAf,EAAsBC,UAAtB,EAAiCC,KAAjC,QAA6C,eAA7C;AAEA,eAAe,SAASC,eAAT,CAAyBC,YAAzB,EAAsC;AACjD,QAAMC,gBAAgB,GAAGC,KAAK,IAAIA,KAAK,CAACF,YAAD,CAAvC;;AACA,QAAMG,gBAAgB,GAAGD,KAAK,IAAID,gBAAgB,CAACC,KAAD,CAAhB,CAAwBE,QAA1D;;AACA,QAAMC,kBAAkB,GAAGX,cAAc,CACrC,CAACO,gBAAD,CADqC,EAErC,CAAC;AAACK,IAAAA,GAAD;AAAKF,IAAAA;AAAL,GAAD,KAAkBE,GAAG,CAACC,GAAJ,CAAQC,EAAE,IAAEJ,QAAQ,CAACI,EAAD,CAApB,CAFmB,CAAzC;;AAIA,QAAMC,oBAAoB,GAAGP,KAAK,IAAID,gBAAgB,CAACC,KAAD,CAAhB,CAAwBQ,YAA9D;;AACA,QAAMC,kBAAkB,GAAGT,KAAK,IAAID,gBAAgB,CAACC,KAAD,CAAhB,CAAwBU,UAA5D;;AAEA,QAAMC,8BAA8B,GAAGX,KAAK,IAAIO,oBAAoB,CAACP,KAAD,CAApB,WAA+BL,UAA/B,cAA6CG,YAA7C,EAAhD;;AACA,QAAMc,0BAA0B,GAAGZ,KAAK,IAAIO,oBAAoB,CAACP,KAAD,CAApB,WAA+BP,MAA/B,cAAyCK,YAAzC,EAA5C;;AACA,QAAMe,0BAA0B,GAAGb,KAAK,IAAIO,oBAAoB,CAACP,KAAD,CAApB,WAA+BN,MAA/B,cAAyCI,YAAzC,EAA5C;;AACA,QAAMgB,0BAA0B,GAAGd,KAAK,IAAIO,oBAAoB,CAACP,KAAD,CAApB,WAA+BJ,KAA/B,cAAwCE,YAAxC,EAA5C;;AAEA,QAAMiB,4BAA4B,GAAGf,KAAK,IAAIS,kBAAkB,CAACT,KAAD,CAAlB,WAA6BL,UAA7B,cAA2CG,YAA3C,EAA9C;;AACA,QAAMkB,wBAAwB,GAAGhB,KAAK,IAAIS,kBAAkB,CAACT,KAAD,CAAlB,WAA6BP,MAA7B,cAAuCK,YAAvC,EAA1C;;AACA,QAAMmB,wBAAwB,GAAGjB,KAAK,IAAIS,kBAAkB,CAACT,KAAD,CAAlB,WAA6BN,MAA7B,cAAuCI,YAAvC,EAA1C;;AACA,QAAMoB,wBAAwB,GAAGlB,KAAK,IAAIS,kBAAkB,CAACT,KAAD,CAAlB,WAA6BJ,KAA7B,cAAsCE,YAAtC,EAA1C;;AAEA,QAAMqB,kBAAkB,GAAGnB,KAAK,IAAG;AAAA,8BACVD,gBAAgB,CAACC,KAAD,CADN;AAAA,UACxBoB,UADwB,qBACxBA,UADwB;;AAE/B,WAAO;AACHC,MAAAA,MAAM,EAAGD,UAAU,CAACC,MAAX,IAAqB,CAD3B;AAEHC,MAAAA,IAAI,EAAGF,UAAU,CAACE;AAFf,KAAP;AAIH,GAND;;AAQA,SAAO;AACHrB,IAAAA,gBADG;AAEHE,IAAAA,kBAFG;AAGHQ,IAAAA,8BAHG;AAIHC,IAAAA,0BAJG;AAKHC,IAAAA,0BALG;AAMHC,IAAAA,0BANG;AAOHK,IAAAA;AAPG,GAAP;AASH","sourcesContent":["import {createSelector} from 'reselect';\r\nimport {CREATE,UPDATE,FETCH_LIST,FETCH} from './actionTypes';\r\n\r\nexport default function createSelectors(resourceName){\r\n    const resourceSelector = state => state[resourceName];\r\n    const entitiesSelector = state => resourceSelector(state).entities;\r\n    const collectionSelector = createSelector(\r\n        [resourceSelector],\r\n        ({ids,entities})=>ids.map(id=>entities[id])\r\n    )\r\n    const loadingStateSelector = state => resourceSelector(state).loadingState;\r\n    const errorStateSelector = state => resourceSelector(state).errorState;\r\n\r\n    const collectionLoadingStateSelector = state => loadingStateSelector(state)[`${FETCH_LIST}/${resourceName}`];\r\n    const createLoadingStateSelector = state => loadingStateSelector(state)[`${CREATE}/${resourceName}`]\r\n    const updateLoadingStateSelector = state => loadingStateSelector(state)[`${UPDATE}/${resourceName}`];\r\n    const memberLoadingStateSelector = state => loadingStateSelector(state)[`${FETCH}/${resourceName}`]\r\n\r\n    const collectionErrorStateSelector = state => errorStateSelector(state)[`${FETCH_LIST}/${resourceName}`];\r\n    const createErrorStateSelector = state => errorStateSelector(state)[`${CREATE}/${resourceName}`];\r\n    const updateErrorStateSelector = state => errorStateSelector(state)[`${UPDATE}/${resourceName}`];\r\n    const memberErrorStateSelector = state => errorStateSelector(state)[`${FETCH}/${resourceName}`];\r\n\r\n    const paginationSelector = state =>{\r\n        const {pagination} = resourceSelector(state);\r\n        return {\r\n            number : pagination.number || 0,\r\n            size : pagination.size\r\n        }\r\n    };\r\n\r\n    return {\r\n        entitiesSelector,\r\n        collectionSelector,\r\n        collectionLoadingStateSelector,\r\n        createLoadingStateSelector,\r\n        updateLoadingStateSelector,\r\n        memberLoadingStateSelector,\r\n        paginationSelector,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}