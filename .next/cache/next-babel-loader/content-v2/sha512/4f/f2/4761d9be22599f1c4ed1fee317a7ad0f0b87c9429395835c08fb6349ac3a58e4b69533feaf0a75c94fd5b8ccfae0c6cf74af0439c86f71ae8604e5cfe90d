{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\React\\\\coin_traders\\\\src\\\\ui\\\\TableHead.jsx\";\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass TableHead extends PureComponent {\n  // 자식 프로퍼티의 값은 JSX 노트 형태 이므로 자바스크립트의 map() 함수가 아니라 리액트에서 제공하는\n  // React.Children.map() 함수를 사용해야함. 해당 함수는 자식 프로퍼티에 포함된 JSX의 컴포넌트 엘리먼트를\n  // 배열 처럼 취급함. 또한 React.cloneElement() 함수를 사용하여 각각의 자식 컴포넌트에 추가 프로퍼티를 전달함\n  // 해당 함수는 JSX 노드를 복사함 다음 특정 프로퍼티를 추가함\n  render() {\n    const {\n      children\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"thead\", {\n      children: React.Children.map(children, child => /*#__PURE__*/React.cloneElement(child, {\n        isHeader: true\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n} //TableHeader 컴포넌트이기 때문에 각 노드에 isHeader 프로퍼티를 추가해줌\n\n\nTableHead.propTypes = {\n  children: PropTypes.node\n};\nexport default TableHead;","map":{"version":3,"sources":["C:/React/coin_traders/src/ui/TableHead.jsx"],"names":["React","PureComponent","PropTypes","TableHead","render","children","props","Children","map","child","cloneElement","isHeader","propTypes","node"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,SAAN,SAAwBF,aAAxB,CAAsC;AACpC;AACA;AACA;AACA;AACAG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,wBACE;AAAA,gBACGN,KAAK,CAACO,QAAN,CAAeC,GAAf,CAAmBH,QAAnB,EAA8BI,KAAD,iBAC5BT,KAAK,CAACU,YAAN,CAAmBD,KAAnB,EAA0B;AAAEE,QAAAA,QAAQ,EAAE;AAAZ,OAA1B,CADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAdmC,C,CAgBtC;;;AAEAR,SAAS,CAACS,SAAV,GAAsB;AACpBP,EAAAA,QAAQ,EAAEH,SAAS,CAACW;AADA,CAAtB;AAGA,eAAeV,SAAf","sourcesContent":["import React, { PureComponent } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass TableHead extends PureComponent {\r\n  // 자식 프로퍼티의 값은 JSX 노트 형태 이므로 자바스크립트의 map() 함수가 아니라 리액트에서 제공하는\r\n  // React.Children.map() 함수를 사용해야함. 해당 함수는 자식 프로퍼티에 포함된 JSX의 컴포넌트 엘리먼트를\r\n  // 배열 처럼 취급함. 또한 React.cloneElement() 함수를 사용하여 각각의 자식 컴포넌트에 추가 프로퍼티를 전달함\r\n  // 해당 함수는 JSX 노드를 복사함 다음 특정 프로퍼티를 추가함\r\n  render() {\r\n    const { children } = this.props;\r\n    return (\r\n      <thead>\r\n        {React.Children.map(children, (child) =>\r\n          React.cloneElement(child, { isHeader: true })\r\n        )}\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n//TableHeader 컴포넌트이기 때문에 각 노드에 isHeader 프로퍼티를 추가해줌\r\n\r\nTableHead.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\nexport default TableHead;\r\n"]},"metadata":{},"sourceType":"module"}