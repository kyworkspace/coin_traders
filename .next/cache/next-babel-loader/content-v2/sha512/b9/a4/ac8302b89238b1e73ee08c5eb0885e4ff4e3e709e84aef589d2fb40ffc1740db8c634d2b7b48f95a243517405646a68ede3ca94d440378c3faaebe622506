{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SET_LOCATION } from '../actions/routerActions';\nconst initState = {\n  location: {}\n};\nexport default ((state = initState, action) => {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case SET_LOCATION:\n      {\n        const {\n          location\n        } = payload;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          location\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/React/coin_traders/src/reducers/routerReducer.js"],"names":["SET_LOCATION","initState","location","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,YAAR,QAA2B,0BAA3B;AAEA,MAAMC,SAAS,GAAE;AACbC,EAAAA,QAAQ,EAAG;AADE,CAAjB;AAIA,gBAAe,CAACC,KAAK,GAAGF,SAAT,EAAmBG,MAAnB,KAA4B;AACvC,QAAM;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAiBF,MAAvB;;AACA,UAAOC,IAAP;AACI,SAAKL,YAAL;AAAoB;AAChB,cAAM;AAACE,UAAAA;AAAD,YAAaI,OAAnB;AACA,+CAAWH,KAAX;AAAiBD,UAAAA;AAAjB;AACH;;AACD;AAAU,aAAOC,KAAP;AALd;AAOH,CATD","sourcesContent":["import {SET_LOCATION} from '../actions/routerActions';\r\n\r\nconst initState ={\r\n    location : {}\r\n}\r\n\r\nexport default (state = initState,action)=>{\r\n    const {type,payload} = action;\r\n    switch(type){\r\n        case SET_LOCATION : {\r\n            const {location} = payload;\r\n            return {...state,location};\r\n        }\r\n        default : return state;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}