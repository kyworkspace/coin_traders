{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from \"react\";\nimport { withStyles, css } from \"./withStyles\";\n\nclass Button extends PureComponent {\n  render() {\n    const {\n      children,\n      disabled,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall,\n      primary,\n      secondary,\n      type,\n      onPress\n    } = this.props;\n    return /*#__PURE__*/_jsx(\"button\", _objectSpread(_objectSpread({}, css(styles.default, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge, secondary && styles.secondary, primary && styles.primary, disabled && styles.disabled)), {}, {\n      disabled: disabled,\n      onClick: onPress,\n      type: type,\n      children: children\n    }));\n  }\n\n}\n\nButton.defaultProps = {\n  onPress: () => {},\n  xsmall: false,\n  small: false,\n  large: false,\n  xlarge: false,\n  secondary: false,\n  primary: false\n};\nexport default withStyles(({\n  color,\n  size,\n  unit,\n  depth,\n  fontWeight\n}) => ({\n  default: _objectSpread(_objectSpread({}, depth.level1), {}, {\n    border: 1,\n    borderStyle: \"solid\",\n    borderColor: color.default,\n    borderRadius: unit,\n    color: color.default,\n    fontSize: size.md,\n    fontWeight: fontWeight.bold,\n    padding: unit * 2,\n    paddingLeft: unit * 4,\n    paddingRight: unit * 4,\n    outline: 0,\n    cursor: \"pointer\",\n    \":hover\": {\n      backgroundColor: color.grayLight\n    },\n    \":focus\": {\n      boxShadow: \"0 0 0px 2px rgba(0, 0, 0, 0.3)\"\n    }\n  }),\n  xlarge: {\n    fontSize: size.xg,\n    padding: unit * 2.5\n  },\n  large: {\n    fontSize: size.lg,\n    padding: unit * 2.5\n  },\n  small: {\n    fontSize: size.sm,\n    padding: unit * 1.5\n  },\n  xsmall: {\n    fontSize: size.xs,\n    padding: unit\n  },\n  primary: {\n    borderColor: color.primary,\n    color: color.white,\n    backgroundColor: color.primary,\n    \":hover\": {\n      backgroundColor: color.primaryDark\n    }\n  },\n  secondary: {\n    borderColor: color.secondary,\n    color: color.secondary\n  },\n  disabled: {\n    borderColor: color.grayDark,\n    color: color.grayLight,\n    cursor: \"default\",\n    opacity: 0.5,\n    backgroundColor: color.gray,\n    \":hover\": {\n      backgroundColor: color.gray\n    }\n  }\n}))(Button);","map":null,"metadata":{},"sourceType":"module"}