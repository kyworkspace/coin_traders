{"ast":null,"code":"import Api from '../Api';\nimport { showMessage } from \"./notificationActions\";\nexport const LOADING_TRANSACTION_LIST = 'transaction/LOADING_TRANSACTION_LIST';\nexport const SET_TRANSACTION_LIST = 'transaction/SET_TRANSACTION_LIST';\nexport const SET_ERROR = 'transaction/SET_ERROR';\nexport const TRADE_COMPLETE = 'transaction/TRADE_COMPLETE';\nexport function tradeComplete() {\n  return {\n    type: TRADE_COMPLETE\n  };\n}\nexport function setError(errorMessage) {\n  return {\n    type: SET_ERROR,\n    payload: {\n      errorMessage\n    }\n  };\n}\nexport function setTransactionList(transactions) {\n  console.log(\"트랜잭션 액션\");\n  return {\n    type: SET_TRANSACTION_LIST,\n    payload: transactions\n  };\n}\nexport function createTransaction(data, onComplete) {\n  return dispatch => Api.post('/transactions', data).then(({\n    data\n  }) => {\n    dispatch(tradeComplete());\n    onComplete();\n  }, error => dispatch(setError(error.response.data.errorMessage)));\n}\nexport function requestTransactionList(params) {\n  return dispatch => {\n    dispatch(loading());\n    Api.get('/transactions', {\n      params\n    }).then(({\n      data\n    }) => dispatch(setTransactionList(data)), error => {\n      dispatch(setError(error.response.data.errorMessage)); //  dispatch(showMessage(error.response.data.errorMessage,true))\n    }); //axios는 에러가 발생할때 then의 두번째 인자에 해당하는 함수를 호출함\n  }; //함수를 반환함\n}\nexport function loading() {\n  return {\n    type: LOADING_TRANSACTION_LIST\n  };\n}","map":null,"metadata":{},"sourceType":"module"}