{"ast":null,"code":"import { SET_ERROR } from '../actions/transactionActions';\nimport { showMessage, SHOW_NOTIFICATION, hideMessage } from '../actions/notificationActions';\nimport { debounce } from '../debounce'; //redux-pack\n\nimport { KEY, LIFECYCLE } from 'redux-pack'; //import {FETCH_TRANSACTION_LIST,createTransaction} from '../actions/transactionPackActions'\n\nconst debouceRunner = debounce(action => action(), 4000);\nexport default (store => nextRunner => action => {\n  const type = action.type,\n        meta = action.meta;\n\n  if (meta && meta.notification) {\n    const _meta$notification = meta.notification,\n          success = _meta$notification.success,\n          error = _meta$notification.error;\n\n    if (success && meta[KEY.LIFECYCLE] === LIFECYCLE.SUCCESS) {\n      //성공\n      store.dispatch(showMessage(success));\n      debouceRunner(() => store.dispatch(hideMessage()));\n    } else if (error && meta[KEY.LIFECYCLE] === LIFECYCLE.FAILURE) {\n      //실패\n      store.dispatch(showMessage(error, true));\n      debouceRunner(() => store.dispatch(hideMessage()));\n    }\n  }\n\n  return nextRunner(action);\n});","map":null,"metadata":{},"sourceType":"module"}