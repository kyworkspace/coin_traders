{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Api from '../Api';\nimport createActions from '../api-redux-pack/createActions';\nexport const FETCH_TRANSACTION_LIST = 'transaction/FETCH_TRANSACTION_LIST';\nexport const CREATE_TRANSACTION = 'transaction/CREATE_TRANSACTION';\n\nconst _createActions = createActions('transactions'),\n      collection = _createActions.collection,\n      create = _createActions.create,\n      reset = _createActions.reset;\n\nexport const resetTransactionList = reset;\nconst PAGE_SIZE = 10; // export function requestTransactionList(params,_page=1){\n//     return {\n//         type : FETCH_TRANSACTION_LIST,\n//         promise : Api.get('/transactions',{params:{...params,_page,_limit : PAGE_SIZE}}),\n//         meta :{\n//             pageNumber : _page,\n//             pageSize : PAGE_SIZE,\n//             notification : {\n//                 success : \"거래 목록을 최신정보로 업데이트 하였습니다.\",\n//                 error : '거래목록을 갱신하는 중에 문제가 발생하였습니다.'\n//             }\n//         }\n//     }\n// }\n//API 호출 방식으로 교체\n\nexport function requestTransactionList(params, _page = 1) {\n  const meta = {\n    pageNumber: _page,\n    pageSize: PAGE_SIZE,\n    notification: {\n      success: \"거래 목록을 최신정보로 업데이트 하였습니다. TransactionPackAction\",\n      error: '거래목록을 갱신하는 중에 문제가 발생하였습니다.'\n    }\n  };\n  return collection(_objectSpread(_objectSpread({}, params), {}, {\n    _page,\n    _limit: PAGE_SIZE\n  }), meta);\n} // export function createTransaction(data,onComplete){\n//     return {\n//         type : CREATE_TRANSACTION,\n//         promise : Api.post('/transactions',data),\n//         meta : {\n//             onSuccess : onComplete,\n//             notification : {\n//                 success : '거래가 성공적으로 완료되었습니다.',\n//             }\n//         }\n//     }\n// }\n\nexport function createTransaction(data, onComplete) {\n  const meta = {\n    onSuccess: onComplete,\n    notification: {\n      success: '거래가 성공적으로 완료되었습니다.'\n    }\n  };\n  return create(data, {}, meta);\n}","map":null,"metadata":{},"sourceType":"module"}