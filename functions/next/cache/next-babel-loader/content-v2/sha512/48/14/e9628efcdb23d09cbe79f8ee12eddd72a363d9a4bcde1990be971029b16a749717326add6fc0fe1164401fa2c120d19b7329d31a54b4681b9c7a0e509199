{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { PureComponent } from \"react\";\nimport Modal from \"../Modal\"; //혹은 Modal from './index.js'\n\nimport { Provider } from \"./context\";\nexport default function createModalProvider(ContentMap = {}) {\n  return class ModalProvider extends PureComponent {\n    constructor(props) {\n      super(props);\n      this.state = {\n        showModal: false\n      };\n      this.handleClose = this.handleClose.bind(this);\n      this.handleOpen = this.handleOpen.bind(this);\n    }\n\n    handleOpen(contentId, modalProps) {\n      this.contentId = contentId;\n      this.modalProps = modalProps;\n      this.setState({\n        showModal: true\n      });\n    }\n\n    handleClose() {\n      this.setState({\n        showModal: false\n      });\n    }\n\n    render() {\n      const children = this.props.children;\n      const showModal = this.state.showModal;\n      const ModalContent = ContentMap[this.contentId];\n      return /*#__PURE__*/_jsxs(Provider, {\n        value: {\n          openModal: this.handleOpen,\n          closeModal: this.handleClose\n        },\n        children: [children, showModal && ModalContent && /*#__PURE__*/_jsx(Modal, {\n          children: /*#__PURE__*/_jsx(ModalContent, _objectSpread({}, this.modalProps))\n        })]\n      });\n    }\n\n  };\n}","map":null,"metadata":{},"sourceType":"module"}