{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nexport default ((loadingMessage = '로딩중') => WrappedComponent => {\n  const displayName = WrappedComponent.displayName,\n        componentName = WrappedComponent.name;\n  const wrappedComponentName = displayName || componentName;\n\n  function WithLoading(_ref) {\n    let isLoading = _ref.isLoading,\n        props = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n    if (isLoading) {\n      return loadingMessage;\n    }\n\n    return /*#__PURE__*/_jsx(WrappedComponent, _objectSpread({}, props));\n  }\n\n  WithLoading.displayName = \"withLoading(\".concat(wrappedComponentName, \")\");\n  return WithLoading;\n});","map":null,"metadata":{},"sourceType":"module"}