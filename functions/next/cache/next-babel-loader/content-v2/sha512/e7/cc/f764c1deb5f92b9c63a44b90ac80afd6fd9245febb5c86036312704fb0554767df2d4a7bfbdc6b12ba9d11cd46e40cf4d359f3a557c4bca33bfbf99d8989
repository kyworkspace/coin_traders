{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from \"react\";\nimport { withStyles, css } from \"./withStyles\";\n\nclass Text extends PureComponent {\n  render() {\n    const {\n      children,\n      bold,\n      light,\n      styles,\n      large,\n      xlarge,\n      small,\n      xsmall,\n      primary,\n      secondary,\n      inverse\n    } = this.props;\n    return /*#__PURE__*/_jsx(\"span\", _objectSpread(_objectSpread({}, css(styles.default, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge, secondary && styles.secondary, primary && styles.primary, bold && styles.bold, light && styles.light, inverse && styles.inverse)), {}, {\n      children: children\n    }));\n  }\n\n}\n\nexport default withStyles(({\n  color,\n  fontWeight,\n  size,\n  lineHeight\n}) => ({\n  default: {\n    color: color.default,\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    fontWeight: fontWeight.normal\n  },\n  xlarge: {\n    fontSize: size.xg,\n    lineHeight: lineHeight.xg\n  },\n  large: {\n    fontSize: size.lg,\n    lineHeight: lineHeight.lg\n  },\n  small: {\n    fontSize: size.sm,\n    lineHeight: lineHeight.sm\n  },\n  xsmall: {\n    fontSize: size.xs,\n    lineHeight: lineHeight.xs\n  },\n  primary: {\n    color: color.primary\n  },\n  secondary: {\n    color: color.secondary\n  },\n  light: {\n    fontWeight: fontWeight.light\n  },\n  bold: {\n    fontWeight: fontWeight.bold\n  },\n  inverse: {\n    color: color.white\n  }\n}))(Text);","map":null,"metadata":{},"sourceType":"module"}