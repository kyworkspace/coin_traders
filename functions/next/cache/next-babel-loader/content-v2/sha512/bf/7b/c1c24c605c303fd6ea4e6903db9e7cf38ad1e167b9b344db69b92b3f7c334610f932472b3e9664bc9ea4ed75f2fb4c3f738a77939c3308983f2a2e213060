{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { PureComponent } from \"react\";\nimport { withStyles, css, withStylesPropTypes } from \"./withStyles\";\nimport Spacing from \"./Spacing\";\nimport Text from \"./Text\";\n\nclass Toast extends PureComponent {\n  render() {\n    const _this$props = this.props,\n          message = _this$props.message,\n          styles = _this$props.styles,\n          warning = _this$props.warning;\n    return /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, css(styles.overlay)), {}, {\n      children: /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, css(styles.wrapper, warning && styles.warning)), {}, {\n        children: /*#__PURE__*/_jsx(Spacing, {\n          vertical: 4,\n          horizontal: 8,\n          children: message\n        })\n      }))\n    }));\n  }\n\n}\n\nexport default withStyles(({\n  depth,\n  unit,\n  color\n}) => ({\n  overlay: {\n    position: \"fixed\",\n    bottom: 0,\n    right: 0,\n    margin: unit * 4\n  },\n  wrapper: _objectSpread(_objectSpread({}, depth.level1), {}, {\n    borderRadius: unit,\n    backgroundColor: color.secondary,\n    padding: unit * 2,\n    marginBottom: unit * 4\n  }),\n  warning: {\n    backgroundColor: color.error\n  }\n}))(Toast);","map":null,"metadata":{},"sourceType":"module"}