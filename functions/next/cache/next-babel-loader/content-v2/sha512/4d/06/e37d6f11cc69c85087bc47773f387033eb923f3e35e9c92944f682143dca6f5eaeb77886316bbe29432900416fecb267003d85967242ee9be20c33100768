{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { PureComponent } from \"react\";\nimport { withStyles, css, withStylesPropTypes } from \"./withStyles\";\nimport Option from \"./Option\";\nexport { Option }; // Select 컴포넌트는 대부분 Option 컴포넌트를 포함하고 있으므로,\n// Select 컴포넌트를 임포트할때\n// Option 컴포넌트를 함께 참조할수 있도록 Option 컴포넌트를 익스포트함\n\nclass Select extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.setRef = this.setRef.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleFocus = this.handleFocus.bind(this);\n    this.handleBlur = this.handleBlur.bind(this);\n    this.state = {\n      focused: false\n    };\n  }\n\n  handleFocus() {\n    this.setState({\n      focused: true\n    });\n  }\n\n  handleBlur() {\n    this.setState({\n      focused: false\n    });\n  }\n\n  handleChange(e) {\n    const _this$props = this.props,\n          name = _this$props.name,\n          onChange = _this$props.onChange;\n\n    if (onChange) {\n      onChange(name, e.target.value);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.autoFocus) {\n      this.ref.focus();\n    }\n  }\n\n  setRef(ref) {\n    this.ref = ref;\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          children = _this$props2.children,\n          disabled = _this$props2.disabled,\n          errorMessage = _this$props2.errorMessage,\n          label = _this$props2.label,\n          value = _this$props2.value,\n          name = _this$props2.name,\n          styles = _this$props2.styles,\n          large = _this$props2.large,\n          xlarge = _this$props2.xlarge,\n          small = _this$props2.small,\n          xsmall = _this$props2.xsmall;\n    const focused = this.state.focused;\n    return /*#__PURE__*/_jsxs(\"fieldset\", _objectSpread(_objectSpread({}, css(styles.wrapper)), {}, {\n      children: [/*#__PURE__*/_jsx(\"label\", _objectSpread(_objectSpread({\n        htmlFor: \"input_\".concat(name)\n      }, css(styles.label, errorMessage && styles.errorLabel)), {}, {\n        children: errorMessage || label\n      })), /*#__PURE__*/_jsx(\"div\", _objectSpread(_objectSpread({}, css(styles.placeholder, xsmall && styles.xsmallPadding, small && styles.smallPadding, large && styles.largePadding, xlarge && styles.xlargePadding, focused && styles.focus, errorMessage && styles.error)), {}, {\n        children: /*#__PURE__*/_jsx(\"select\", _objectSpread(_objectSpread({}, css(styles.select, xsmall && styles.xsmall, small && styles.small, large && styles.large, xlarge && styles.xlarge)), {}, {\n          disabled: disabled,\n          id: \"input_\".concat(name),\n          ref: this.setRef,\n          onChange: this.handleChange,\n          onFocus: this.handleFocus,\n          onBlur: this.handleBlur,\n          value: value,\n          children: React.Children.map(children, child => /*#__PURE__*/React.cloneElement(child, {\n            disabled\n          }))\n        }))\n      }))]\n    }));\n  }\n\n}\n\nSelect.defaultProps = {\n  onChange: () => {},\n  autoFocus: false\n};\nexport default withStyles(({\n  depth,\n  unit,\n  color,\n  size,\n  lineHeight\n}) => ({\n  wrapper: {\n    border: 0,\n    padding: 0,\n    position: \"relative\"\n  },\n  label: {\n    display: \"block\",\n    fontSize: size.xs,\n    top: 2,\n    left: unit * 2,\n    cursor: \"pointer\"\n  },\n  placeholder: {\n    marginTop: 2,\n    border: 1,\n    borderColor: color.primary,\n    borderRadius: 4,\n    padding: unit * 1.5\n  },\n  focus: {\n    boxShadow: \"0 0 0px 2px rgba(0, 0, 0, 0.3)\"\n  },\n  xlargePadding: {\n    padding: unit * 2\n  },\n  largePadding: {\n    padding: unit * 2\n  },\n  smallPadding: {\n    padding: unit - 1\n  },\n  select: {\n    fontSize: size.md,\n    lineHeight: lineHeight.md,\n    backgroundColor: color.white,\n    border: 0,\n    outline: 0,\n    width: \"100%\"\n  },\n  xlarge: {\n    fontSize: size.xg\n  },\n  large: {\n    fontSize: size.lg\n  },\n  small: {\n    fontSize: size.sm\n  },\n  errorLabel: {\n    color: color.error\n  },\n  error: {\n    borderColor: color.error\n  }\n}))(Select);","map":null,"metadata":{},"sourceType":"module"}